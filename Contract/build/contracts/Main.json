{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "ValidPatient",
          "type": "bool"
        }
      ],
      "name": "InvalidatePatient",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_PatientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_PatientKeyGenerated",
          "type": "string"
        }
      ],
      "name": "PatientAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_approveTo",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "User",
          "type": "address"
        }
      ],
      "name": "UserApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "ValidPatient",
          "type": "bool"
        }
      ],
      "name": "ValidatePatient",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "AddressOfUser",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_PatientAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_PatientKeyGenerated",
          "type": "string"
        }
      ],
      "name": "addPatientToDatabase",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_approveTo",
          "type": "address"
        }
      ],
      "name": "approveUserForKeyAccess",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_AddressOfUser",
          "type": "address"
        }
      ],
      "name": "checkIfProvider",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_PatientWalletAddress",
          "type": "address"
        }
      ],
      "name": "checkPatient",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_patientAddress",
          "type": "address"
        }
      ],
      "name": "getPatientKey",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "Key",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "Valid",
                  "type": "bool"
                }
              ],
              "internalType": "struct Main.AccessKey",
              "name": "PatientKey",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "ValidPatient",
              "type": "bool"
            }
          ],
          "internalType": "struct Main.PatientsData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSelfKeys",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "string",
                  "name": "Key",
                  "type": "string"
                },
                {
                  "internalType": "bool",
                  "name": "Valid",
                  "type": "bool"
                }
              ],
              "internalType": "struct Main.AccessKey",
              "name": "PatientKey",
              "type": "tuple"
            },
            {
              "internalType": "bool",
              "name": "ValidPatient",
              "type": "bool"
            }
          ],
          "internalType": "struct Main.PatientsData",
          "name": "data",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/main.sol"
  },
  "ast": {
    "absolutePath": "contracts/main.sol",
    "exportedSymbols": {
      "IProvider": [
        10
      ],
      "Main": [
        323
      ]
    },
    "id": 324,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.6",
          ".6",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:31:0"
      },
      {
        "id": 2,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "141:33:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IProvider",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 10,
        "linearizedBaseContracts": [
          10
        ],
        "name": "IProvider",
        "nameLocation": "233:9:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "d64799a7",
            "id": 9,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfProvider",
            "nameLocation": "258:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4,
                  "mutability": "mutable",
                  "name": "_AddressOfUser",
                  "nameLocation": "282:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "274:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "274:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "273:24:0"
            },
            "returnParameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "348:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "348:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "347:6:0"
            },
            "scope": 10,
            "src": "249:105:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 324,
        "src": "223:133:0",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Main",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 323,
        "linearizedBaseContracts": [
          323
        ],
        "name": "Main",
        "nameLocation": "367:4:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 11,
              "nodeType": "StructuredDocumentation",
              "src": "378:50:0",
              "text": "variables ///\n @dev Address of the user"
            },
            "functionSelector": "dc220af2",
            "id": 13,
            "mutability": "mutable",
            "name": "AddressOfUser",
            "nameLocation": "448:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 323,
            "src": "433:28:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "433:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 21,
              "nodeType": "Block",
              "src": "482:43:0",
              "statements": [
                {
                  "expression": {
                    "id": 19,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 16,
                      "name": "AddressOfUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13,
                      "src": "492:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 17,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "508:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 18,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "508:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "492:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20,
                  "nodeType": "ExpressionStatement",
                  "src": "492:26:0"
                }
              ]
            },
            "id": 22,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "479:2:0"
            },
            "returnParameters": {
              "id": 15,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:0:0"
            },
            "scope": 323,
            "src": "468:57:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Main.AccessKey",
            "id": 27,
            "members": [
              {
                "constant": false,
                "id": 24,
                "mutability": "mutable",
                "name": "Key",
                "nameLocation": "565:3:0",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "558:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                },
                "typeName": {
                  "id": 23,
                  "name": "string",
                  "nodeType": "ElementaryTypeName",
                  "src": "558:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage_ptr",
                    "typeString": "string"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 26,
                "mutability": "mutable",
                "name": "Valid",
                "nameLocation": "583:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 27,
                "src": "578:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 25,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "578:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "AccessKey",
            "nameLocation": "538:9:0",
            "nodeType": "StructDefinition",
            "scope": 323,
            "src": "531:64:0",
            "visibility": "public"
          },
          {
            "canonicalName": "Main.PatientsData",
            "id": 35,
            "members": [
              {
                "constant": false,
                "id": 29,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "639:2:0",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "631:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 28,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "631:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 32,
                "mutability": "mutable",
                "name": "PatientKey",
                "nameLocation": "661:10:0",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "651:20:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_AccessKey_$27_storage_ptr",
                  "typeString": "struct Main.AccessKey"
                },
                "typeName": {
                  "id": 31,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 30,
                    "name": "AccessKey",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 27,
                    "src": "651:9:0"
                  },
                  "referencedDeclaration": 27,
                  "src": "651:9:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_AccessKey_$27_storage_ptr",
                    "typeString": "struct Main.AccessKey"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "ValidPatient",
                "nameLocation": "686:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 35,
                "src": "681:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 33,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "681:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PatientsData",
            "nameLocation": "608:12:0",
            "nodeType": "StructDefinition",
            "scope": 323,
            "src": "601:104:0",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 36,
              "nodeType": "StructuredDocumentation",
              "src": "711:41:0",
              "text": "@notice EVENTS for Data in blockchain"
            },
            "id": 42,
            "name": "ValidatePatient",
            "nameLocation": "763:15:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 41,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "787:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "779:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "779:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ValidPatient",
                  "nameLocation": "796:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 42,
                  "src": "791:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "791:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "778:31:0"
            },
            "src": "757:53:0"
          },
          {
            "anonymous": false,
            "id": 48,
            "name": "InvalidatePatient",
            "nameLocation": "821:17:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "847:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "839:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "839:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "ValidPatient",
                  "nameLocation": "856:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 48,
                  "src": "851:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "851:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "838:31:0"
            },
            "src": "815:55:0"
          },
          {
            "anonymous": false,
            "id": 54,
            "name": "PatientAdded",
            "nameLocation": "881:12:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_PatientAddress",
                  "nameLocation": "902:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "894:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 49,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "894:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 52,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_PatientKeyGenerated",
                  "nameLocation": "926:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 54,
                  "src": "919:27:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 51,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "893:54:0"
            },
            "src": "875:73:0"
          },
          {
            "anonymous": false,
            "id": 60,
            "name": "UserApproved",
            "nameLocation": "959:12:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 56,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_approveTo",
                  "nameLocation": "980:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "972:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 55,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "972:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 58,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "User",
                  "nameLocation": "1000:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 60,
                  "src": "992:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 57,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "992:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "971:34:0"
            },
            "src": "953:53:0"
          },
          {
            "constant": false,
            "documentation": {
              "id": 61,
              "nodeType": "StructuredDocumentation",
              "src": "1012:47:0",
              "text": "@dev Main Database of the Keys and Patients"
            },
            "id": 68,
            "mutability": "mutable",
            "name": "Patients",
            "nameLocation": "1117:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 323,
            "src": "1064:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$_$",
              "typeString": "mapping(address => mapping(uint256 => struct Main.PatientsData))"
            },
            "typeName": {
              "id": 67,
              "keyType": {
                "id": 62,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1072:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1064:52:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$_$",
                "typeString": "mapping(address => mapping(uint256 => struct Main.PatientsData))"
              },
              "valueType": {
                "id": 66,
                "keyType": {
                  "id": 63,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1091:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1083:32:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$",
                  "typeString": "mapping(uint256 => struct Main.PatientsData)"
                },
                "valueType": {
                  "id": 65,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 64,
                    "name": "PatientsData",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 35,
                    "src": "1102:12:0"
                  },
                  "referencedDeclaration": 35,
                  "src": "1102:12:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                    "typeString": "struct Main.PatientsData"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 69,
              "nodeType": "StructuredDocumentation",
              "src": "1131:67:0",
              "text": "@dev This will keep record of the keys generated by the patient"
            },
            "id": 73,
            "mutability": "mutable",
            "name": "KeysGenerated",
            "nameLocation": "1231:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 323,
            "src": "1203:41:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 72,
              "keyType": {
                "id": 70,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1211:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1203:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 71,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1222:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 74,
              "nodeType": "StructuredDocumentation",
              "src": "1250:102:0",
              "text": "@dev Keeps the mapping of the total approved users to access the key of particular patient address"
            },
            "id": 78,
            "mutability": "mutable",
            "name": "TotalApprovedUsers",
            "nameLocation": "1385:18:0",
            "nodeType": "VariableDeclaration",
            "scope": 323,
            "src": "1357:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 77,
              "keyType": {
                "id": 75,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1365:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1357:27:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 76,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1376:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 79,
              "nodeType": "StructuredDocumentation",
              "src": "1409:66:0",
              "text": "@dev Keeping the track of Approved User Address of the patient"
            },
            "id": 85,
            "mutability": "mutable",
            "name": "ApprovedUsers",
            "nameLocation": "1528:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 323,
            "src": "1480:61:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
              "typeString": "mapping(address => mapping(uint256 => address))"
            },
            "typeName": {
              "id": 84,
              "keyType": {
                "id": 80,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1488:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1480:47:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                "typeString": "mapping(address => mapping(uint256 => address))"
              },
              "valueType": {
                "id": 83,
                "keyType": {
                  "id": 81,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1507:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "nodeType": "Mapping",
                "src": "1499:27:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                  "typeString": "mapping(uint256 => address)"
                },
                "valueType": {
                  "id": 82,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1518:7:0",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "1760:138:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 97,
                        "name": "_AddressOfUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 88,
                        "src": "1876:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "hexValue": "307836303243373165344441433437613034324565376634364530616565313746393441336241304236",
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1799:42:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0x602C71e4DAC47a042Ee7f46E0aee17F94A3bA0B6"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 93,
                          "name": "IProvider",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10,
                          "src": "1789:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IProvider_$10_$",
                            "typeString": "type(contract IProvider)"
                          }
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1789:53:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IProvider_$10",
                          "typeString": "contract IProvider"
                        }
                      },
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkIfProvider",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "1789:86:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) payable external returns (bool)"
                      }
                    },
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1789:102:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 92,
                  "id": 99,
                  "nodeType": "Return",
                  "src": "1770:121:0"
                }
              ]
            },
            "documentation": {
              "id": 86,
              "nodeType": "StructuredDocumentation",
              "src": "1548:100:0",
              "text": "@dev To check if the user is a provider is not\n @param _AddressOfUser Address of the user"
            },
            "functionSelector": "d64799a7",
            "id": 101,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkIfProvider",
            "nameLocation": "1662:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 89,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 88,
                  "mutability": "mutable",
                  "name": "_AddressOfUser",
                  "nameLocation": "1686:14:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1678:22:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 87,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1677:24:0"
            },
            "returnParameters": {
              "id": 92,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 91,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 101,
                  "src": "1750:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 90,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1750:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1749:6:0"
            },
            "scope": 323,
            "src": "1653:245:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1974:159:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 109,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 106,
                              "name": "AddressOfUser",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "2021:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 105,
                            "name": "checkIfProvider",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 101,
                            "src": "2005:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2005:30:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "74727565",
                          "id": 108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2039:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2005:38:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206d75737420626520612070726f766964657220746f2061636365737320746869732066756e6374696f6e",
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2057:48:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bcb347a43e2da380917f8b8d9853900a3bfda0d8be8e010c81831bfb8000c0fd",
                          "typeString": "literal_string \"You must be a provider to access this function\""
                        },
                        "value": "You must be a provider to access this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bcb347a43e2da380917f8b8d9853900a3bfda0d8be8e010c81831bfb8000c0fd",
                          "typeString": "literal_string \"You must be a provider to access this function\""
                        }
                      ],
                      "id": 104,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1984:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1984:131:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 112,
                  "nodeType": "ExpressionStatement",
                  "src": "1984:131:0"
                },
                {
                  "id": 113,
                  "nodeType": "PlaceholderStatement",
                  "src": "2125:1:0"
                }
              ]
            },
            "documentation": {
              "id": 102,
              "nodeType": "StructuredDocumentation",
              "src": "1904:41:0",
              "text": "@dev MODIFIERS for provider functions"
            },
            "id": 115,
            "name": "onlyProvider",
            "nameLocation": "1959:12:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1971:2:0"
            },
            "src": "1950:183:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "2381:202:0",
              "statements": [
                {
                  "assignments": [
                    127
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 127,
                      "mutability": "mutable",
                      "name": "_patient_data",
                      "nameLocation": "2411:13:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 145,
                      "src": "2391:33:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PatientsData_$35_memory_ptr",
                        "typeString": "struct Main.PatientsData"
                      },
                      "typeName": {
                        "id": 126,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 125,
                          "name": "PatientsData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35,
                          "src": "2391:12:0"
                        },
                        "referencedDeclaration": 35,
                        "src": "2391:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                          "typeString": "struct Main.PatientsData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 133,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 128,
                        "name": "Patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "2427:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct Main.PatientsData storage ref))"
                        }
                      },
                      "id": 130,
                      "indexExpression": {
                        "id": 129,
                        "name": "_PatientWalletAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 118,
                        "src": "2436:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2427:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$",
                        "typeString": "mapping(uint256 => struct Main.PatientsData storage ref)"
                      }
                    },
                    "id": 132,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 131,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2459:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2427:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PatientsData_$35_storage",
                      "typeString": "struct Main.PatientsData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2391:70:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 134,
                        "name": "_patient_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 127,
                        "src": "2475:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PatientsData_$35_memory_ptr",
                          "typeString": "struct Main.PatientsData memory"
                        }
                      },
                      "id": 135,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "2475:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2495:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2475:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 143,
                    "nodeType": "Block",
                    "src": "2540:37:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "66616c7365",
                          "id": 141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2561:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "functionReturnParameters": 124,
                        "id": 142,
                        "nodeType": "Return",
                        "src": "2554:12:0"
                      }
                    ]
                  },
                  "id": 144,
                  "nodeType": "IfStatement",
                  "src": "2471:106:0",
                  "trueBody": {
                    "id": 140,
                    "nodeType": "Block",
                    "src": "2498:36:0",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2519:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 124,
                        "id": 139,
                        "nodeType": "Return",
                        "src": "2512:11:0"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 116,
              "nodeType": "StructuredDocumentation",
              "src": "2139:105:0",
              "text": "@dev Check if patient exists in DB\n @param _PatientWalletAddress Address of the Patient Wallet"
            },
            "functionSelector": "6529c777",
            "id": 146,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 121,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 120,
                  "name": "onlyProvider",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 115,
                  "src": "2341:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2341:12:0"
              }
            ],
            "name": "checkPatient",
            "nameLocation": "2258:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "_PatientWalletAddress",
                  "nameLocation": "2279:21:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "2271:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2270:31:0"
            },
            "returnParameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "2371:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2371:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2370:6:0"
            },
            "scope": 323,
            "src": "2249:334:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 209,
              "nodeType": "Block",
              "src": "2887:387:0",
              "statements": [
                {
                  "assignments": [
                    157
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 157,
                      "mutability": "mutable",
                      "name": "keysCount",
                      "nameLocation": "2905:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 209,
                      "src": "2897:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 156,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2897:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 161,
                  "initialValue": {
                    "baseExpression": {
                      "id": 158,
                      "name": "KeysGenerated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "2917:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 160,
                    "indexExpression": {
                      "id": 159,
                      "name": "_PatientAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 149,
                      "src": "2931:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2917:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2897:50:0"
                },
                {
                  "assignments": [
                    164
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 164,
                      "mutability": "mutable",
                      "name": "p",
                      "nameLocation": "2978:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 209,
                      "src": "2957:22:0",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                        "typeString": "struct Main.PatientsData"
                      },
                      "typeName": {
                        "id": 163,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 162,
                          "name": "PatientsData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 35,
                          "src": "2957:12:0"
                        },
                        "referencedDeclaration": 35,
                        "src": "2957:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                          "typeString": "struct Main.PatientsData"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 170,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 165,
                        "name": "Patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "2982:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct Main.PatientsData storage ref))"
                        }
                      },
                      "id": 167,
                      "indexExpression": {
                        "id": 166,
                        "name": "_PatientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "2991:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2982:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$",
                        "typeString": "mapping(uint256 => struct Main.PatientsData storage ref)"
                      }
                    },
                    "id": 169,
                    "indexExpression": {
                      "id": 168,
                      "name": "keysCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "3008:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2982:36:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PatientsData_$35_storage",
                      "typeString": "struct Main.PatientsData storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2957:61:0"
                },
                {
                  "expression": {
                    "id": 175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 171,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "3028:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                          "typeString": "struct Main.PatientsData storage pointer"
                        }
                      },
                      "id": 173,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29,
                      "src": "3028:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 174,
                      "name": "keysCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "3035:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3028:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 176,
                  "nodeType": "ExpressionStatement",
                  "src": "3028:16:0"
                },
                {
                  "expression": {
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 177,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "3054:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                            "typeString": "struct Main.PatientsData storage pointer"
                          }
                        },
                        "id": 180,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PatientKey",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "3054:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AccessKey_$27_storage",
                          "typeString": "struct Main.AccessKey storage ref"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Key",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 24,
                      "src": "3054:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 182,
                      "name": "_PatientKeyGenerated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151,
                      "src": "3073:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3054:39:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "3054:39:0"
                },
                {
                  "expression": {
                    "id": 191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 185,
                          "name": "p",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 164,
                          "src": "3103:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                            "typeString": "struct Main.PatientsData storage pointer"
                          }
                        },
                        "id": 188,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "PatientKey",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 32,
                        "src": "3103:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AccessKey_$27_storage",
                          "typeString": "struct Main.AccessKey storage ref"
                        }
                      },
                      "id": 189,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "Valid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 26,
                      "src": "3103:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 190,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3124:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3103:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 192,
                  "nodeType": "ExpressionStatement",
                  "src": "3103:25:0"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 193,
                        "name": "p",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 164,
                        "src": "3138:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                          "typeString": "struct Main.PatientsData storage pointer"
                        }
                      },
                      "id": 195,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "ValidPatient",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "3138:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3155:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3138:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "3138:21:0"
                },
                {
                  "expression": {
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "3169:32:0",
                    "subExpression": {
                      "baseExpression": {
                        "id": 199,
                        "name": "KeysGenerated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "3169:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 201,
                      "indexExpression": {
                        "id": 200,
                        "name": "_PatientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "3183:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3169:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "3169:32:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 205,
                        "name": "_PatientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 149,
                        "src": "3229:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 206,
                        "name": "_PatientKeyGenerated",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151,
                        "src": "3246:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 204,
                      "name": "PatientAdded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3216:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory)"
                      }
                    },
                    "id": 207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3216:51:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 208,
                  "nodeType": "EmitStatement",
                  "src": "3211:56:0"
                }
              ]
            },
            "documentation": {
              "id": 147,
              "nodeType": "StructuredDocumentation",
              "src": "2589:152:0",
              "text": "@dev Generate key for patient\n @param _PatientAddress Address of the Patient\n @param _PatientKeyGenerated Generated key of the patient"
            },
            "functionSelector": "e4d18d58",
            "id": 210,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 154,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 153,
                  "name": "onlyProvider",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 115,
                  "src": "2874:12:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2874:12:0"
              }
            ],
            "name": "addPatientToDatabase",
            "nameLocation": "2755:20:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 149,
                  "mutability": "mutable",
                  "name": "_PatientAddress",
                  "nameLocation": "2793:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2785:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2785:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 151,
                  "mutability": "mutable",
                  "name": "_PatientKeyGenerated",
                  "nameLocation": "2832:20:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 210,
                  "src": "2818:34:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 150,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2818:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2775:83:0"
            },
            "returnParameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2887:0:0"
            },
            "scope": 323,
            "src": "2746:528:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 242,
              "nodeType": "Block",
              "src": "3455:216:0",
              "statements": [
                {
                  "assignments": [
                    217
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 217,
                      "mutability": "mutable",
                      "name": "totalApproveUsers",
                      "nameLocation": "3473:17:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 242,
                      "src": "3465:25:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 216,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3465:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 222,
                  "initialValue": {
                    "baseExpression": {
                      "id": 218,
                      "name": "TotalApprovedUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "3493:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 221,
                    "indexExpression": {
                      "expression": {
                        "id": 219,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "3512:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3512:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3493:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3465:58:0"
                },
                {
                  "assignments": [
                    224
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 224,
                      "mutability": "mutable",
                      "name": "u",
                      "nameLocation": "3541:1:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 242,
                      "src": "3533:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 223,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3533:7:0",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 231,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 225,
                        "name": "ApprovedUsers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85,
                        "src": "3545:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                          "typeString": "mapping(address => mapping(uint256 => address))"
                        }
                      },
                      "id": 228,
                      "indexExpression": {
                        "expression": {
                          "id": 226,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3559:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3559:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3545:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                        "typeString": "mapping(uint256 => address)"
                      }
                    },
                    "id": 230,
                    "indexExpression": {
                      "id": 229,
                      "name": "totalApproveUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 217,
                      "src": "3571:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3545:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3533:56:0"
                },
                {
                  "expression": {
                    "id": 234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 232,
                      "name": "u",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 224,
                      "src": "3599:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 233,
                      "name": "_approveTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 213,
                      "src": "3603:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3599:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 235,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:14:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 237,
                        "name": "_approveTo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3641:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 238,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3653:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3653:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 236,
                      "name": "UserApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60,
                      "src": "3628:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3628:36:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 241,
                  "nodeType": "EmitStatement",
                  "src": "3623:41:0"
                }
              ]
            },
            "documentation": {
              "id": 211,
              "nodeType": "StructuredDocumentation",
              "src": "3280:102:0",
              "text": "@dev To approve third party to access the key\n @param _approveTo Address of the third party"
            },
            "functionSelector": "06ebbb5c",
            "id": 243,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "approveUserForKeyAccess",
            "nameLocation": "3396:23:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 213,
                  "mutability": "mutable",
                  "name": "_approveTo",
                  "nameLocation": "3428:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 243,
                  "src": "3420:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3420:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3419:20:0"
            },
            "returnParameters": {
              "id": 215,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3455:0:0"
            },
            "scope": 323,
            "src": "3387:284:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 265,
              "nodeType": "Block",
              "src": "3890:183:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 254,
                            "name": "_patientAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 246,
                            "src": "3938:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 253,
                          "name": "_approvalGranted",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 307,
                          "src": "3921:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view returns (bool)"
                          }
                        },
                        "id": 255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3921:33:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f7520646f6e2774206861766520617070726f76616c20666f722070617469656e742064617461",
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3968:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b24ccc7bae0275e9526d81ee0e974c7338b9419c53793205221140e933f7b032",
                          "typeString": "literal_string \"You don't have approval for patient data\""
                        },
                        "value": "You don't have approval for patient data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b24ccc7bae0275e9526d81ee0e974c7338b9419c53793205221140e933f7b032",
                          "typeString": "literal_string \"You don't have approval for patient data\""
                        }
                      ],
                      "id": 252,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3900:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 258,
                  "nodeType": "ExpressionStatement",
                  "src": "3900:120:0"
                },
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 259,
                        "name": "Patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "4038:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct Main.PatientsData storage ref))"
                        }
                      },
                      "id": 261,
                      "indexExpression": {
                        "id": 260,
                        "name": "_patientAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 246,
                        "src": "4047:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4038:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$",
                        "typeString": "mapping(uint256 => struct Main.PatientsData storage ref)"
                      }
                    },
                    "id": 263,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4064:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4038:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PatientsData_$35_storage",
                      "typeString": "struct Main.PatientsData storage ref"
                    }
                  },
                  "functionReturnParameters": 251,
                  "id": 264,
                  "nodeType": "Return",
                  "src": "4031:35:0"
                }
              ]
            },
            "documentation": {
              "id": 244,
              "nodeType": "StructuredDocumentation",
              "src": "3677:85:0",
              "text": "@dev To get the patient key\n @param _patientAddress Address of the patient"
            },
            "functionSelector": "a19dcda7",
            "id": 266,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPatientKey",
            "nameLocation": "3776:13:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "_patientAddress",
                  "nameLocation": "3798:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "3790:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3789:25:0"
            },
            "returnParameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3880:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 266,
                  "src": "3860:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PatientsData_$35_memory_ptr",
                    "typeString": "struct Main.PatientsData"
                  },
                  "typeName": {
                    "id": 249,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 248,
                      "name": "PatientsData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35,
                      "src": "3860:12:0"
                    },
                    "referencedDeclaration": 35,
                    "src": "3860:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                      "typeString": "struct Main.PatientsData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3859:26:0"
            },
            "scope": 323,
            "src": "3767:306:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "4305:288:0",
              "statements": [
                {
                  "assignments": [
                    275
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 275,
                      "mutability": "mutable",
                      "name": "totalApproveByPatient",
                      "nameLocation": "4323:21:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 306,
                      "src": "4315:29:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 274,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4315:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 279,
                  "initialValue": {
                    "baseExpression": {
                      "id": 276,
                      "name": "TotalApprovedUsers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78,
                      "src": "4347:18:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 278,
                    "indexExpression": {
                      "id": 277,
                      "name": "_patientAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "4366:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4347:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4315:67:0"
                },
                {
                  "body": {
                    "id": 302,
                    "nodeType": "Block",
                    "src": "4444:121:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 290,
                                "name": "ApprovedUsers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 85,
                                "src": "4462:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_address_$_$",
                                  "typeString": "mapping(address => mapping(uint256 => address))"
                                }
                              },
                              "id": 292,
                              "indexExpression": {
                                "id": 291,
                                "name": "_patientAddress",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 269,
                                "src": "4476:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4462:30:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
                                "typeString": "mapping(uint256 => address)"
                              }
                            },
                            "id": 294,
                            "indexExpression": {
                              "id": 293,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "4493:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4462:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 295,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "4499:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4499:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4462:47:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 301,
                        "nodeType": "IfStatement",
                        "src": "4458:97:0",
                        "trueBody": {
                          "id": 300,
                          "nodeType": "Block",
                          "src": "4511:44:0",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 298,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4536:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 273,
                              "id": 299,
                              "nodeType": "Return",
                              "src": "4529:11:0"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 284,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 281,
                      "src": "4412:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 285,
                      "name": "totalApproveByPatient",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "4416:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4412:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 303,
                  "initializationExpression": {
                    "assignments": [
                      281
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 281,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4405:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 303,
                        "src": "4397:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 280,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4397:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 283,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4409:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4397:13:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4439:3:0",
                      "subExpression": {
                        "id": 287,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 281,
                        "src": "4439:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 289,
                    "nodeType": "ExpressionStatement",
                    "src": "4439:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "4392:173:0"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4581:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 273,
                  "id": 305,
                  "nodeType": "Return",
                  "src": "4574:12:0"
                }
              ]
            },
            "documentation": {
              "id": 267,
              "nodeType": "StructuredDocumentation",
              "src": "4079:114:0",
              "text": "@dev To check if party approved to access address or not\n @param _patientAddress Address of the patient"
            },
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_approvalGranted",
            "nameLocation": "4207:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 269,
                  "mutability": "mutable",
                  "name": "_patientAddress",
                  "nameLocation": "4232:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "4224:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 268,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4224:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4223:25:0"
            },
            "returnParameters": {
              "id": 273,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 272,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "4295:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 271,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4295:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4294:6:0"
            },
            "scope": 323,
            "src": "4198:395:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 321,
              "nodeType": "Block",
              "src": "4703:47:0",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 314,
                        "name": "Patients",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68,
                        "src": "4720:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$_$",
                          "typeString": "mapping(address => mapping(uint256 => struct Main.PatientsData storage ref))"
                        }
                      },
                      "id": 317,
                      "indexExpression": {
                        "expression": {
                          "id": 315,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4729:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4729:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4720:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_PatientsData_$35_storage_$",
                        "typeString": "mapping(uint256 => struct Main.PatientsData storage ref)"
                      }
                    },
                    "id": 319,
                    "indexExpression": {
                      "hexValue": "30",
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4741:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4720:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PatientsData_$35_storage",
                      "typeString": "struct Main.PatientsData storage ref"
                    }
                  },
                  "functionReturnParameters": 313,
                  "id": 320,
                  "nodeType": "Return",
                  "src": "4713:30:0"
                }
              ]
            },
            "documentation": {
              "id": 308,
              "nodeType": "StructuredDocumentation",
              "src": "4599:29:0",
              "text": "@dev To get the self keys"
            },
            "functionSelector": "083faa1b",
            "id": 322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSelfKeys",
            "nameLocation": "4642:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4653:2:0"
            },
            "returnParameters": {
              "id": 313,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 312,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4697:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 322,
                  "src": "4677:24:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_PatientsData_$35_memory_ptr",
                    "typeString": "struct Main.PatientsData"
                  },
                  "typeName": {
                    "id": 311,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 310,
                      "name": "PatientsData",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 35,
                      "src": "4677:12:0"
                    },
                    "referencedDeclaration": 35,
                    "src": "4677:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_PatientsData_$35_storage_ptr",
                      "typeString": "struct Main.PatientsData"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4676:26:0"
            },
            "scope": 323,
            "src": "4633:117:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 324,
        "src": "358:4394:0",
        "usedErrors": []
      }
    ],
    "src": "32:4721:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610b38806100326000396000f3fe6080604052600436106100705760003560e01c8063a19dcda71161004e578063a19dcda7146100d8578063d64799a7146100f8578063dc220af21461010b578063e4d18d581461014357600080fd5b806306ebbb5c14610075578063083faa1b1461008a5780636529c777146100b5575b600080fd5b61008861008336600461086d565b610156565b005b34801561009657600080fd5b5061009f6101c0565b6040516100ac91906108dc565b60405180910390f35b6100c86100c336600461086d565b6102bb565b60405190151581526020016100ac565b3480156100e457600080fd5b5061009f6100f336600461086d565b610411565b6100c861010636600461086d565b61057c565b34801561011757600080fd5b5060005461012b906001600160a01b031681565b6040516001600160a01b0390911681526020016100ac565b610088610151366004610946565b610603565b33600081815260036020908152604080832054600483528184209381905292825280516001600160a01b038616815291820193909352909183917fd9c01e75f7ea24b510e0bd9bb517232a8f86e1fc7ab85e4675748e30553b30a0910160405180910390a1505050565b6101c861077f565b3360009081526001602081815260408084208480528252928390208351606081018552815481528451808601909552928101805493949193928501928290829061021190610a08565b80601f016020809104026020016040519081016040528092919081815260200182805461023d90610a08565b801561028a5780601f1061025f5761010080835404028352916020019161028a565b820191906000526020600020905b81548152906001019060200180831161026d57829003601f168201915b50505091835250506001919091015460ff908116151560209283015291835260039390930154161515910152919050565b600080546102d1906001600160a01b031661057c565b15156001146102fb5760405162461bcd60e51b81526004016102f290610a3d565b60405180910390fd5b6001600160a01b03821660009081526001602081815260408084208480528252808420815160608101835281548152825180840190935293810180549193850192918290829061034a90610a08565b80601f016020809104026020016040519081016040528092919081815260200182805461037690610a08565b80156103c35780601f10610398576101008083540402835291602001916103c3565b820191906000526020600020905b8154815290600101906020018083116103a657829003601f168201915b50505091835250506001919091015460ff90811615156020928301529183526003939093015416151591015280519091506104015750600192915050565b50600092915050565b505b919050565b61041961077f565b61042282610709565b61047f5760405162461bcd60e51b815260206004820152602860248201527f596f7520646f6e2774206861766520617070726f76616c20666f722070617469604482015267656e74206461746160c01b60648201526084016102f2565b6001600160a01b0382166000908152600160208181526040808420848052825292839020835160608101855281548152845180860190955292810180549394919392850192829082906104d190610a08565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90610a08565b801561054a5780601f1061051f5761010080835404028352916020019161054a565b820191906000526020600020905b81548152906001019060200180831161052d57829003601f168201915b50505091835250506001919091015460ff90811615156020928301529183526003939093015416151591015292915050565b60405163d64799a760e01b81526001600160a01b038216600482015260009073602c71e4dac47a042ee7f46e0aee17f94a3ba0b69063d64799a7906024016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190610a8b565b92915050565b600054610618906001600160a01b031661057c565b15156001146106395760405162461bcd60e51b81526004016102f290610a3d565b6001600160a01b03821660009081526002602090815260408083205460018084528285208286528452919093208381558451909261067d92840191908601906107bd565b5060028181018054600160ff19918216811790925560038401805490911690911790556001600160a01b0385166000908152602091909152604081208054916106c583610aad565b91905055507ff537abbc11693c65132fb438317bbefdab9fecb035a7828567ae49f76d6976c584846040516106fb929190610ad6565b60405180910390a150505050565b6001600160a01b038116600090815260036020526040812054815b81811015610775576001600160a01b03848116600090815260046020908152604080832085845290915290205416331415610763575060019392505050565b8061076d81610aad565b915050610724565b5060009392505050565b6040518060600160405280600081526020016107b06040518060400160405280606081526020016000151581525090565b8152600060209091015290565b8280546107c990610a08565b90600052602060002090601f0160209004810192826107eb5760008555610831565b82601f1061080457805160ff1916838001178555610831565b82800160010185558215610831579182015b82811115610831578251825591602001919060010190610816565b5061083d929150610841565b5090565b5b8082111561083d5760008155600101610842565b80356001600160a01b038116811461040c57600080fd5b60006020828403121561087f57600080fd5b61088882610856565b9392505050565b6000815180845260005b818110156108b557602081850181015186830182015201610899565b818111156108c7576000602083870101525b50601f01601f19169290920160200192915050565b6020815281516020820152600060208301516060604084015280516040608085015261090b60c085018261088f565b90506020820151151560a0850152604085015115156060850152809250505092915050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561095957600080fd5b61096283610856565b9150602083013567ffffffffffffffff8082111561097f57600080fd5b818501915085601f83011261099357600080fd5b8135818111156109a5576109a5610930565b604051601f8201601f19908116603f011681019083821181831017156109cd576109cd610930565b816040528281528860208487010111156109e657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c90821680610a1c57607f821691505b6020821081141561040a57634e487b7160e01b600052602260045260246000fd5b6020808252602e908201527f596f75206d75737420626520612070726f766964657220746f2061636365737360408201526d103a3434b990333ab731ba34b7b760911b606082015260800190565b600060208284031215610a9d57600080fd5b8151801515811461088857600080fd5b6000600019821415610acf57634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b0383168152604060208201819052600090610afa9083018461088f565b94935050505056fea264697066735822122082729cfcde9d2e2664207ca40dadda21ff27fd3db8f0dc953fd9c55fd54863bf64736f6c634300080b0033",
  "bytecodeSha1": "3a6fefa9aa684645e0e3a28fcef197d571d0472a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "Main",
  "coverageMap": {
    "branches": {
      "0": {
        "Main._approvalGranted": {
          "18": [
            4462,
            4509,
            false
          ]
        },
        "Main.getPatientKey": {
          "17": [
            3921,
            3954,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Main._approvalGranted": {
          "14": [
            4529,
            4540
          ],
          "15": [
            4439,
            4442
          ],
          "16": [
            4574,
            4586
          ]
        },
        "Main.addPatientToDatabase": {
          "8": [
            3028,
            3044
          ],
          "9": [
            3054,
            3093
          ],
          "10": [
            3103,
            3128
          ],
          "11": [
            3138,
            3159
          ],
          "12": [
            3169,
            3201
          ],
          "13": [
            3211,
            3267
          ]
        },
        "Main.approveUserForKeyAccess": {
          "0": [
            3623,
            3664
          ],
          "1": [
            3599,
            3613
          ]
        },
        "Main.checkIfProvider": {
          "7": [
            1770,
            1891
          ]
        },
        "Main.checkPatient": {
          "3": [
            2512,
            2523
          ],
          "4": [
            2554,
            2566
          ]
        },
        "Main.getPatientKey": {
          "5": [
            3900,
            4020
          ],
          "6": [
            4031,
            4066
          ]
        },
        "Main.getSelfKeys": {
          "2": [
            4713,
            4743
          ]
        }
      }
    }
  },
  "dependencies": [
    "IProvider"
  ],
  "deployedBytecode": "6080604052600436106100705760003560e01c8063a19dcda71161004e578063a19dcda7146100d8578063d64799a7146100f8578063dc220af21461010b578063e4d18d581461014357600080fd5b806306ebbb5c14610075578063083faa1b1461008a5780636529c777146100b5575b600080fd5b61008861008336600461086d565b610156565b005b34801561009657600080fd5b5061009f6101c0565b6040516100ac91906108dc565b60405180910390f35b6100c86100c336600461086d565b6102bb565b60405190151581526020016100ac565b3480156100e457600080fd5b5061009f6100f336600461086d565b610411565b6100c861010636600461086d565b61057c565b34801561011757600080fd5b5060005461012b906001600160a01b031681565b6040516001600160a01b0390911681526020016100ac565b610088610151366004610946565b610603565b33600081815260036020908152604080832054600483528184209381905292825280516001600160a01b038616815291820193909352909183917fd9c01e75f7ea24b510e0bd9bb517232a8f86e1fc7ab85e4675748e30553b30a0910160405180910390a1505050565b6101c861077f565b3360009081526001602081815260408084208480528252928390208351606081018552815481528451808601909552928101805493949193928501928290829061021190610a08565b80601f016020809104026020016040519081016040528092919081815260200182805461023d90610a08565b801561028a5780601f1061025f5761010080835404028352916020019161028a565b820191906000526020600020905b81548152906001019060200180831161026d57829003601f168201915b50505091835250506001919091015460ff908116151560209283015291835260039390930154161515910152919050565b600080546102d1906001600160a01b031661057c565b15156001146102fb5760405162461bcd60e51b81526004016102f290610a3d565b60405180910390fd5b6001600160a01b03821660009081526001602081815260408084208480528252808420815160608101835281548152825180840190935293810180549193850192918290829061034a90610a08565b80601f016020809104026020016040519081016040528092919081815260200182805461037690610a08565b80156103c35780601f10610398576101008083540402835291602001916103c3565b820191906000526020600020905b8154815290600101906020018083116103a657829003601f168201915b50505091835250506001919091015460ff90811615156020928301529183526003939093015416151591015280519091506104015750600192915050565b50600092915050565b505b919050565b61041961077f565b61042282610709565b61047f5760405162461bcd60e51b815260206004820152602860248201527f596f7520646f6e2774206861766520617070726f76616c20666f722070617469604482015267656e74206461746160c01b60648201526084016102f2565b6001600160a01b0382166000908152600160208181526040808420848052825292839020835160608101855281548152845180860190955292810180549394919392850192829082906104d190610a08565b80601f01602080910402602001604051908101604052809291908181526020018280546104fd90610a08565b801561054a5780601f1061051f5761010080835404028352916020019161054a565b820191906000526020600020905b81548152906001019060200180831161052d57829003601f168201915b50505091835250506001919091015460ff90811615156020928301529183526003939093015416151591015292915050565b60405163d64799a760e01b81526001600160a01b038216600482015260009073602c71e4dac47a042ee7f46e0aee17f94a3ba0b69063d64799a7906024016020604051808303816000875af11580156105d9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105fd9190610a8b565b92915050565b600054610618906001600160a01b031661057c565b15156001146106395760405162461bcd60e51b81526004016102f290610a3d565b6001600160a01b03821660009081526002602090815260408083205460018084528285208286528452919093208381558451909261067d92840191908601906107bd565b5060028181018054600160ff19918216811790925560038401805490911690911790556001600160a01b0385166000908152602091909152604081208054916106c583610aad565b91905055507ff537abbc11693c65132fb438317bbefdab9fecb035a7828567ae49f76d6976c584846040516106fb929190610ad6565b60405180910390a150505050565b6001600160a01b038116600090815260036020526040812054815b81811015610775576001600160a01b03848116600090815260046020908152604080832085845290915290205416331415610763575060019392505050565b8061076d81610aad565b915050610724565b5060009392505050565b6040518060600160405280600081526020016107b06040518060400160405280606081526020016000151581525090565b8152600060209091015290565b8280546107c990610a08565b90600052602060002090601f0160209004810192826107eb5760008555610831565b82601f1061080457805160ff1916838001178555610831565b82800160010185558215610831579182015b82811115610831578251825591602001919060010190610816565b5061083d929150610841565b5090565b5b8082111561083d5760008155600101610842565b80356001600160a01b038116811461040c57600080fd5b60006020828403121561087f57600080fd5b61088882610856565b9392505050565b6000815180845260005b818110156108b557602081850181015186830182015201610899565b818111156108c7576000602083870101525b50601f01601f19169290920160200192915050565b6020815281516020820152600060208301516060604084015280516040608085015261090b60c085018261088f565b90506020820151151560a0850152604085015115156060850152809250505092915050565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561095957600080fd5b61096283610856565b9150602083013567ffffffffffffffff8082111561097f57600080fd5b818501915085601f83011261099357600080fd5b8135818111156109a5576109a5610930565b604051601f8201601f19908116603f011681019083821181831017156109cd576109cd610930565b816040528281528860208487010111156109e657600080fd5b8260208601602083013760006020848301015280955050505050509250929050565b600181811c90821680610a1c57607f821691505b6020821081141561040a57634e487b7160e01b600052602260045260246000fd5b6020808252602e908201527f596f75206d75737420626520612070726f766964657220746f2061636365737360408201526d103a3434b990333ab731ba34b7b760911b606082015260800190565b600060208284031215610a9d57600080fd5b8151801515811461088857600080fd5b6000600019821415610acf57634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b0383168152604060208201819052600090610afa9083018461088f565b94935050505056fea264697066735822122082729cfcde9d2e2664207ca40dadda21ff27fd3db8f0dc953fd9c55fd54863bf64736f6c634300080b0033",
  "deployedSourceMap": "358:4394:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3387:284;;;;;;:::i;:::-;;:::i;:::-;;4633:117;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2249:334;;;;;;:::i;:::-;;:::i;:::-;;;1715:14:1;;1708:22;1690:41;;1678:2;1663:18;2249:334:0;1550:187:1;3767:306:0;;;;;;;;;;-1:-1:-1;3767:306:0;;;;;:::i;:::-;;:::i;1653:245::-;;;;;;:::i;:::-;;:::i;433:28::-;;;;;;;;;;-1:-1:-1;433:28:0;;;;-1:-1:-1;;;;;433:28:0;;;;;;-1:-1:-1;;;;;1906:32:1;;;1888:51;;1876:2;1861:18;433:28:0;1742:203:1;2746:528:0;;;;;;:::i;:::-;;:::i;3387:284::-;3512:10;3465:25;3493:30;;;:18;:30;;;;;;;;;3545:13;:25;;;;;:44;;;;;;;3628:36;;-1:-1:-1;;;;;3313:15:1;;3295:34;;3345:18;;;3338:43;;;;3493:30:0;;3603:10;;3628:36;;3230:18:1;3628:36:0;;;;;;;3455:216;;3387:284;:::o;4633:117::-;4677:24;;:::i;:::-;4729:10;4720:20;;;;:8;:20;;;;;;;;:23;;;;;;;;;4713:30;;;;;;;;;;;;;;;;;;;;;;;;;;4720:23;;4713:30;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4713:30:0;;;-1:-1:-1;;4713:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4633:117;-1:-1:-1;4633:117:0:o;2249:334::-;2371:4;2021:13;;2005:30;;-1:-1:-1;;;;;2021:13:0;2005:15;:30::i;:::-;:38;;2039:4;2005:38;1984:131;;;;-1:-1:-1;;;1984:131:0;;;;;;;:::i;:::-;;;;;;;;;-1:-1:-1;;;;;2427:31:0;::::1;2391:33;2427:31:::0;;;:8:::1;:31;::::0;;;;;;;:34;;;;;;;;2391:70;;::::1;::::0;::::1;::::0;;;;;;;;;;::::1;::::0;;;;;::::1;::::0;;2427:34;;2391:70;::::1;::::0;;;;;;::::1;::::0;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;;;2391:70:0;;;-1:-1:-1;;2391:70:0::1;::::0;;;::::1;::::0;::::1;::::0;;::::1;;;;::::0;;::::1;::::0;;;;::::1;::::0;;;::::1;::::0;::::1;;;::::0;::::1;::::0;2475:16;;2391:70;;-1:-1:-1;2471:106:0::1;;-1:-1:-1::0;2519:4:0::1;::::0;2249:334;-1:-1:-1;;2249:334:0:o;2471:106::-:1;-1:-1:-1::0;2561:5:0::1;::::0;2249:334;-1:-1:-1;;2249:334:0:o;2471:106::-:1;2381:202;2125:1;2249:334:::0;;;:::o;3767:306::-;3860:24;;:::i;:::-;3921:33;3938:15;3921:16;:33::i;:::-;3900:120;;;;-1:-1:-1;;;3900:120:0;;4394:2:1;3900:120:0;;;4376:21:1;4433:2;4413:18;;;4406:30;4472:34;4452:18;;;4445:62;-1:-1:-1;;;4523:18:1;;;4516:38;4571:19;;3900:120:0;4192:404:1;3900:120:0;-1:-1:-1;;;;;4038:25:0;;;;;;:8;:25;;;;;;;;:28;;;;;;;;;4031:35;;;;;;;;;;;;;;;;;;;;;;;;;;4038:28;;4031:35;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;4031:35:0;;;-1:-1:-1;;4031:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3767:306;-1:-1:-1;;3767:306:0:o;1653:245::-;1789:102;;-1:-1:-1;;;1789:102:0;;-1:-1:-1;;;;;1906:32:1;;1789:102:0;;;1888:51:1;1750:4:0;;1799:42;;1789:86;;1861:18:1;;1789:102:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1770:121;1653:245;-1:-1:-1;;1653:245:0:o;2746:528::-;2021:13;;2005:30;;-1:-1:-1;;;;;2021:13:0;2005:15;:30::i;:::-;:38;;2039:4;2005:38;1984:131;;;;-1:-1:-1;;;1984:131:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;2917:30:0;::::1;2897:17;2917:30:::0;;;:13:::1;:30;::::0;;;;;;;;2982:8:::1;:25:::0;;;;;;:36;;;;;;;;;3028:16;;;3054:39;;2982:36;;3054:39:::1;::::0;:12;::::1;::::0;:39;;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;3103:18:0;;;;:25;;3124:4:::1;-1:-1:-1::0;;3103:25:0;;::::1;::::0;::::1;::::0;;;3138:14:::1;::::0;::::1;:21:::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;3169:30:0;::::1;-1:-1:-1::0;3169:30:0;;;::::1;::::0;;;;;;;:32;;;::::1;::::0;::::1;:::i;:::-;;;;;;3216:51;3229:15;3246:20;3216:51;;;;;;;:::i;:::-;;;;;;;;2887:387;;2746:528:::0;;:::o;4198:395::-;-1:-1:-1;;;;;4347:35:0;;4295:4;4347:35;;;:18;:35;;;;;;4295:4;4392:173;4416:21;4412:1;:25;4392:173;;;-1:-1:-1;;;;;4462:30:0;;;;;;;:13;:30;;;;;;;;:33;;;;;;;;;;4499:10;4462:47;4458:97;;;-1:-1:-1;4536:4:0;;4198:395;-1:-1:-1;;;4198:395:0:o;4458:97::-;4439:3;;;;:::i;:::-;;;;4392:173;;;-1:-1:-1;4581:5:0;;4198:395;-1:-1:-1;;;4198:395:0:o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:1;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;192:186;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:1:o;383:472::-;425:3;463:5;457:12;490:6;485:3;478:19;515:1;525:162;539:6;536:1;533:13;525:162;;;601:4;657:13;;;653:22;;647:29;629:11;;;625:20;;618:59;554:12;525:162;;;705:6;702:1;699:13;696:87;;;771:1;764:4;755:6;750:3;746:16;742:27;735:38;696:87;-1:-1:-1;837:2:1;816:15;-1:-1:-1;;812:29:1;803:39;;;;844:4;799:50;;383:472;-1:-1:-1;;383:472:1:o;860:685::-;1045:2;1034:9;1027:21;1090:6;1084:13;1079:2;1068:9;1064:18;1057:41;1008:4;1145:2;1137:6;1133:15;1127:22;1185:4;1180:2;1169:9;1165:18;1158:32;1227:12;1221:19;1277:2;1271:3;1260:9;1256:19;1249:31;1303:54;1352:3;1341:9;1337:19;1321:14;1303:54;:::i;:::-;1289:68;;1432:2;1418:12;1414:21;1408:28;1401:36;1394:44;1388:3;1377:9;1373:19;1366:73;1509:2;1501:6;1497:15;1491:22;1484:30;1477:38;1470:4;1459:9;1455:20;1448:68;1533:6;1525:14;;;;860:685;;;;:::o;1950:127::-;2011:10;2006:3;2002:20;1999:1;1992:31;2042:4;2039:1;2032:15;2066:4;2063:1;2056:15;2082:996;2160:6;2168;2221:2;2209:9;2200:7;2196:23;2192:32;2189:52;;;2237:1;2234;2227:12;2189:52;2260:29;2279:9;2260:29;:::i;:::-;2250:39;;2340:2;2329:9;2325:18;2312:32;2363:18;2404:2;2396:6;2393:14;2390:34;;;2420:1;2417;2410:12;2390:34;2458:6;2447:9;2443:22;2433:32;;2503:7;2496:4;2492:2;2488:13;2484:27;2474:55;;2525:1;2522;2515:12;2474:55;2561:2;2548:16;2583:2;2579;2576:10;2573:36;;;2589:18;;:::i;:::-;2664:2;2658:9;2632:2;2718:13;;-1:-1:-1;;2714:22:1;;;2738:2;2710:31;2706:40;2694:53;;;2762:18;;;2782:22;;;2759:46;2756:72;;;2808:18;;:::i;:::-;2848:10;2844:2;2837:22;2883:2;2875:6;2868:18;2923:7;2918:2;2913;2909;2905:11;2901:20;2898:33;2895:53;;;2944:1;2941;2934:12;2895:53;3000:2;2995;2991;2987:11;2982:2;2974:6;2970:15;2957:46;3045:1;3040:2;3035;3027:6;3023:15;3019:24;3012:35;3066:6;3056:16;;;;;;;2082:996;;;;;:::o;3392:380::-;3471:1;3467:12;;;;3514;;;3535:61;;3589:4;3581:6;3577:17;3567:27;;3535:61;3642:2;3634:6;3631:14;3611:18;3608:38;3605:161;;;3688:10;3683:3;3679:20;3676:1;3669:31;3723:4;3720:1;3713:15;3751:4;3748:1;3741:15;3777:410;3979:2;3961:21;;;4018:2;3998:18;;;3991:30;4057:34;4052:2;4037:18;;4030:62;-1:-1:-1;;;4123:2:1;4108:18;;4101:44;4177:3;4162:19;;3777:410::o;4601:277::-;4668:6;4721:2;4709:9;4700:7;4696:23;4692:32;4689:52;;;4737:1;4734;4727:12;4689:52;4769:9;4763:16;4822:5;4815:13;4808:21;4801:5;4798:32;4788:60;;4844:1;4841;4834:12;4883:232;4922:3;-1:-1:-1;;4943:17:1;;4940:140;;;5002:10;4997:3;4993:20;4990:1;4983:31;5037:4;5034:1;5027:15;5065:4;5062:1;5055:15;4940:140;-1:-1:-1;5107:1:1;5096:13;;4883:232::o;5120:317::-;-1:-1:-1;;;;;5297:32:1;;5279:51;;5366:2;5361;5346:18;;5339:30;;;-1:-1:-1;;5386:45:1;;5412:18;;5404:6;5386:45;:::i;:::-;5378:53;5120:317;-1:-1:-1;;;;5120:317:1:o",
  "language": "Solidity",
  "natspec": {
    "events": {
      "ValidatePatient(uint256,bool)": {
        "notice": "EVENTS for Data in blockchain"
      }
    },
    "kind": "dev",
    "methods": {
      "AddressOfUser()": {
        "notice": "variables ///"
      },
      "addPatientToDatabase(address,string)": {
        "details": "Generate key for patient",
        "params": {
          "_PatientAddress": "Address of the Patient",
          "_PatientKeyGenerated": "Generated key of the patient"
        }
      },
      "approveUserForKeyAccess(address)": {
        "details": "To approve third party to access the key",
        "params": {
          "_approveTo": "Address of the third party"
        }
      },
      "checkIfProvider(address)": {
        "details": "To check if the user is a provider is not",
        "params": {
          "_AddressOfUser": "Address of the user"
        }
      },
      "checkPatient(address)": {
        "details": "Check if patient exists in DB",
        "params": {
          "_PatientWalletAddress": "Address of the Patient Wallet"
        }
      },
      "getPatientKey(address)": {
        "details": "To get the patient key",
        "params": {
          "_patientAddress": "Address of the patient"
        }
      },
      "getSelfKeys()": {
        "details": "To get the self keys"
      }
    },
    "stateVariables": {
      "AddressOfUser": {
        "details": "Address of the user"
      },
      "ApprovedUsers": {
        "details": "Keeping the track of Approved User Address of the patient"
      },
      "KeysGenerated": {
        "details": "This will keep record of the keys generated by the patient"
      },
      "Patients": {
        "details": "Main Database of the Keys and Patients"
      },
      "TotalApprovedUsers": {
        "details": "Keeps the mapping of the total approved users to access the key of particular patient address"
      }
    },
    "version": 1
  },
  "offset": [
    358,
    4752
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA19DCDA7 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xA19DCDA7 EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0xD64799A7 EQ PUSH2 0xF8 JUMPI DUP1 PUSH4 0xDC220AF2 EQ PUSH2 0x10B JUMPI DUP1 PUSH4 0xE4D18D58 EQ PUSH2 0x143 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6EBBB5C EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x83FAA1B EQ PUSH2 0x8A JUMPI DUP1 PUSH4 0x6529C777 EQ PUSH2 0xB5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x88 PUSH2 0x83 CALLDATASIZE PUSH1 0x4 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x156 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x96 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x8DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC8 PUSH2 0xC3 CALLDATASIZE PUSH1 0x4 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xE4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9F PUSH2 0xF3 CALLDATASIZE PUSH1 0x4 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x411 JUMP JUMPDEST PUSH2 0xC8 PUSH2 0x106 CALLDATASIZE PUSH1 0x4 PUSH2 0x86D JUMP JUMPDEST PUSH2 0x57C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x117 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH2 0x12B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xAC JUMP JUMPDEST PUSH2 0x88 PUSH2 0x151 CALLDATASIZE PUSH1 0x4 PUSH2 0x946 JUMP JUMPDEST PUSH2 0x603 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x4 DUP4 MSTORE DUP2 DUP5 KECCAK256 SWAP4 DUP2 SWAP1 MSTORE SWAP3 DUP3 MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE SWAP2 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE SWAP1 SWAP2 DUP4 SWAP2 PUSH32 0xD9C01E75F7EA24B510E0BD9BB517232A8F86E1FC7AB85E4675748E30553B30A0 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH2 0x1C8 PUSH2 0x77F JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP3 DUP6 ADD SWAP3 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x211 SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x23D SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x25F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x26D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 ADD MSTORE SWAP2 DUP4 MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x2D1 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x57C JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x2FB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x60 DUP2 ADD DUP4 MSTORE DUP2 SLOAD DUP2 MSTORE DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE SWAP4 DUP2 ADD DUP1 SLOAD SWAP2 SWAP4 DUP6 ADD SWAP3 SWAP2 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x34A SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x376 SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3C3 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x398 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3C3 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3A6 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 ADD MSTORE SWAP2 DUP4 MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE DUP1 MLOAD SWAP1 SWAP2 POP PUSH2 0x401 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x419 PUSH2 0x77F JUMP JUMPDEST PUSH2 0x422 DUP3 PUSH2 0x709 JUMP JUMPDEST PUSH2 0x47F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520617070726F76616C20666F722070617469 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0x656E742064617461 PUSH1 0xC0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP5 DUP1 MSTORE DUP3 MSTORE SWAP3 DUP4 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x60 DUP2 ADD DUP6 MSTORE DUP2 SLOAD DUP2 MSTORE DUP5 MLOAD DUP1 DUP7 ADD SWAP1 SWAP6 MSTORE SWAP3 DUP2 ADD DUP1 SLOAD SWAP4 SWAP5 SWAP2 SWAP4 SWAP3 DUP6 ADD SWAP3 DUP3 SWAP1 DUP3 SWAP1 PUSH2 0x4D1 SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4FD SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x54A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x51F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x54A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x52D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP SWAP2 DUP4 MSTORE POP POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0xFF SWAP1 DUP2 AND ISZERO ISZERO PUSH1 0x20 SWAP3 DUP4 ADD MSTORE SWAP2 DUP4 MSTORE PUSH1 0x3 SWAP4 SWAP1 SWAP4 ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xD64799A7 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH20 0x602C71E4DAC47A042EE7F46E0AEE17F94A3BA0B6 SWAP1 PUSH4 0xD64799A7 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5D9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5FD SWAP2 SWAP1 PUSH2 0xA8B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x618 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x57C JUMP JUMPDEST ISZERO ISZERO PUSH1 0x1 EQ PUSH2 0x639 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F2 SWAP1 PUSH2 0xA3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD PUSH1 0x1 DUP1 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP3 DUP7 MSTORE DUP5 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP4 DUP2 SSTORE DUP5 MLOAD SWAP1 SWAP3 PUSH2 0x67D SWAP3 DUP5 ADD SWAP2 SWAP1 DUP7 ADD SWAP1 PUSH2 0x7BD JUMP JUMPDEST POP PUSH1 0x2 DUP2 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0xFF NOT SWAP2 DUP3 AND DUP2 OR SWAP1 SWAP3 SSTORE PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x6C5 DUP4 PUSH2 0xAAD JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0xF537ABBC11693C65132FB438317BBEFDAB9FECB035A7828567AE49F76D6976C5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x6FB SWAP3 SWAP2 SWAP1 PUSH2 0xAD6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x775 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP6 DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD AND CALLER EQ ISZERO PUSH2 0x763 JUMPI POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x76D DUP2 PUSH2 0xAAD JUMP JUMPDEST SWAP2 POP POP PUSH2 0x724 JUMP JUMPDEST POP PUSH1 0x0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x7B0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x7C9 SWAP1 PUSH2 0xA08 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x7EB JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x831 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x804 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x831 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x831 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x831 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x816 JUMP JUMPDEST POP PUSH2 0x83D SWAP3 SWAP2 POP PUSH2 0x841 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x83D JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x842 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x87F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x888 DUP3 PUSH2 0x856 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x8B5 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x899 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x8C7 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE DUP2 MLOAD PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x60 PUSH1 0x40 DUP5 ADD MSTORE DUP1 MLOAD PUSH1 0x40 PUSH1 0x80 DUP6 ADD MSTORE PUSH2 0x90B PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x88F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x40 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP6 ADD MSTORE DUP1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x959 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x962 DUP4 PUSH2 0x856 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x97F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x993 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x9A5 PUSH2 0x930 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x9CD JUMPI PUSH2 0x9CD PUSH2 0x930 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 PUSH1 0x20 DUP5 DUP8 ADD ADD GT ISZERO PUSH2 0x9E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xA1C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x40A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x596F75206D75737420626520612070726F766964657220746F20616363657373 PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x103A3434B990333AB731BA34B7B7 PUSH1 0x91 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xA9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x888 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0xACF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xAFA SWAP1 DUP4 ADD DUP5 PUSH2 0x88F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 PUSH19 0x9CFCDE9D2E2664207CA40DADDA21FF27FD3DB8 CREATE 0xDC SWAP6 EXTCODEHASH 0xD9 0xC5 0x5F 0xD5 BASEFEE PUSH4 0xBF64736F PUSH13 0x634300080B0033000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        358,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x70"
    },
    "12": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA19DCDA7"
    },
    "25": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "GT",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4E"
    },
    "29": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA19DCDA7"
    },
    "36": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD8"
    },
    "40": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD64799A7"
    },
    "47": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "EQ",
      "path": "0"
    },
    "48": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF8"
    },
    "51": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "52": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "53": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xDC220AF2"
    },
    "58": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "EQ",
      "path": "0"
    },
    "59": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x10B"
    },
    "62": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "63": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "64": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xE4D18D58"
    },
    "69": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "EQ",
      "path": "0"
    },
    "70": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x143"
    },
    "73": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "74": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "76": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "77": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "78": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "79": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "80": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6EBBB5C"
    },
    "85": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "EQ",
      "path": "0"
    },
    "86": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x75"
    },
    "89": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "90": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "91": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x83FAA1B"
    },
    "96": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "EQ",
      "path": "0"
    },
    "97": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8A"
    },
    "100": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "101": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "102": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0x6529C777"
    },
    "107": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "EQ",
      "path": "0"
    },
    "108": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xB5"
    },
    "111": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "112": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "113": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "115": {
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "DUP1",
      "path": "0"
    },
    "116": {
      "first_revert": true,
      "fn": null,
      "offset": [
        358,
        4752
      ],
      "op": "REVERT",
      "path": "0"
    },
    "117": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "118": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "121": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x83"
    },
    "124": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "125": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "127": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86D"
    },
    "130": {
      "fn": "Main.approveUserForKeyAccess",
      "jump": "i",
      "offset": [
        3387,
        3671
      ],
      "op": "JUMP",
      "path": "0"
    },
    "131": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "132": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x156"
    },
    "135": {
      "fn": "Main.approveUserForKeyAccess",
      "jump": "i",
      "offset": [
        3387,
        3671
      ],
      "op": "JUMP",
      "path": "0"
    },
    "136": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "137": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "STOP",
      "path": "0"
    },
    "138": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "139": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "140": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "DUP1",
      "path": "0"
    },
    "141": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "142": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x96"
    },
    "145": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "146": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "148": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "DUP1",
      "path": "0"
    },
    "149": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "REVERT",
      "path": "0"
    },
    "150": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "151": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "POP",
      "path": "0"
    },
    "152": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F"
    },
    "155": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C0"
    },
    "158": {
      "fn": "Main.getSelfKeys",
      "jump": "i",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "159": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "160": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "162": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "163": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "166": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "167": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "168": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8DC"
    },
    "171": {
      "fn": "Main.getSelfKeys",
      "jump": "i",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "172": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "173": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "175": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "176": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "DUP1",
      "path": "0"
    },
    "177": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "178": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "SUB",
      "path": "0"
    },
    "179": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "180": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "RETURN",
      "path": "0"
    },
    "181": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "182": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "185": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC3"
    },
    "188": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "189": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "191": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86D"
    },
    "194": {
      "fn": "Main.checkPatient",
      "jump": "i",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "195": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "196": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2BB"
    },
    "199": {
      "fn": "Main.checkPatient",
      "jump": "i",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "200": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "201": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "203": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "204": {
      "op": "SWAP1"
    },
    "205": {
      "op": "ISZERO"
    },
    "206": {
      "op": "ISZERO"
    },
    "207": {
      "op": "DUP2"
    },
    "208": {
      "op": "MSTORE"
    },
    "209": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "211": {
      "op": "ADD"
    },
    "212": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "215": {
      "op": "JUMP"
    },
    "216": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "217": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "218": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "219": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "220": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE4"
    },
    "223": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "224": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "226": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "DUP1",
      "path": "0"
    },
    "227": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "REVERT",
      "path": "0"
    },
    "228": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "229": {
      "op": "POP"
    },
    "230": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9F"
    },
    "233": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF3"
    },
    "236": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "237": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "239": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86D"
    },
    "242": {
      "fn": "Main.getPatientKey",
      "jump": "i",
      "offset": [
        3767,
        4073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "243": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "244": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x411"
    },
    "247": {
      "fn": "Main.getPatientKey",
      "jump": "i",
      "offset": [
        3767,
        4073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "248": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "249": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xC8"
    },
    "252": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x106"
    },
    "255": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "256": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "258": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x86D"
    },
    "261": {
      "fn": "Main.checkIfProvider",
      "jump": "i",
      "offset": [
        1653,
        1898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "262": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "263": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57C"
    },
    "266": {
      "fn": "Main.checkIfProvider",
      "jump": "i",
      "offset": [
        1653,
        1898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "267": {
      "offset": [
        433,
        461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "268": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "269": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "270": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "271": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x117"
    },
    "274": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "275": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "277": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "278": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "REVERT",
      "path": "0"
    },
    "279": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "280": {
      "op": "POP"
    },
    "281": {
      "offset": [
        433,
        461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "283": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "284": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12B"
    },
    "287": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "288": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "290": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "292": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "294": {
      "op": "SHL"
    },
    "295": {
      "op": "SUB"
    },
    "296": {
      "offset": [
        433,
        461
      ],
      "op": "AND",
      "path": "0"
    },
    "297": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "298": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "299": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "300": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "302": {
      "fn": "Main.checkIfProvider",
      "offset": [
        433,
        461
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "307": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "309": {
      "op": "SHL"
    },
    "310": {
      "op": "SUB"
    },
    "311": {
      "op": "SWAP1"
    },
    "312": {
      "op": "SWAP2"
    },
    "313": {
      "op": "AND"
    },
    "314": {
      "op": "DUP2"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "offset": [
        433,
        461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAC"
    },
    "322": {
      "op": "JUMP"
    },
    "323": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "324": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x88"
    },
    "327": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x151"
    },
    "330": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "331": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "333": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x946"
    },
    "336": {
      "fn": "Main.addPatientToDatabase",
      "jump": "i",
      "offset": [
        2746,
        3274
      ],
      "op": "JUMP",
      "path": "0"
    },
    "337": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "338": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x603"
    },
    "341": {
      "fn": "Main.addPatientToDatabase",
      "jump": "i",
      "offset": [
        2746,
        3274
      ],
      "op": "JUMP",
      "path": "0"
    },
    "342": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "343": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3512,
        3522
      ],
      "op": "CALLER",
      "path": "0"
    },
    "344": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3465,
        3490
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "346": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "347": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "348": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "349": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3511
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "351": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "353": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "354": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "DUP2",
      "path": "0"
    },
    "355": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "356": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "358": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "DUP1",
      "path": "0"
    },
    "359": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "DUP4",
      "path": "0"
    },
    "360": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "361": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "362": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3558
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "364": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3570
      ],
      "op": "DUP4",
      "path": "0"
    },
    "365": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3570
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "366": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3570
      ],
      "op": "DUP2",
      "path": "0"
    },
    "367": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3570
      ],
      "op": "DUP5",
      "path": "0"
    },
    "368": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3570
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "369": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3589
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "370": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3589
      ],
      "op": "DUP2",
      "path": "0"
    },
    "371": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3589
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "372": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "373": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3589
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "374": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3589
      ],
      "op": "DUP3",
      "path": "0"
    },
    "375": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3545,
        3589
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "376": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 0
    },
    "377": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "378": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "382": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "384": {
      "op": "SHL"
    },
    "385": {
      "op": "SUB"
    },
    "386": {
      "op": "DUP7"
    },
    "387": {
      "op": "AND"
    },
    "388": {
      "op": "DUP2"
    },
    "389": {
      "op": "MSTORE"
    },
    "390": {
      "op": "SWAP2"
    },
    "391": {
      "op": "DUP3"
    },
    "392": {
      "op": "ADD"
    },
    "393": {
      "op": "SWAP4"
    },
    "394": {
      "op": "SWAP1"
    },
    "395": {
      "op": "SWAP4"
    },
    "396": {
      "op": "MSTORE"
    },
    "397": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "398": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3493,
        3523
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "399": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3603,
        3613
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 1
    },
    "400": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3603,
        3613
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "401": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0xD9C01E75F7EA24B510E0BD9BB517232A8F86E1FC7AB85E4675748E30553B30A0"
    },
    "434": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "438": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "439": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "DUP1",
      "path": "0"
    },
    "440": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "441": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "SUB",
      "path": "0"
    },
    "442": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "443": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3628,
        3664
      ],
      "op": "LOG1",
      "path": "0"
    },
    "444": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3455,
        3671
      ],
      "op": "POP",
      "path": "0"
    },
    "445": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3455,
        3671
      ],
      "op": "POP",
      "path": "0"
    },
    "446": {
      "fn": "Main.approveUserForKeyAccess",
      "offset": [
        3387,
        3671
      ],
      "op": "POP",
      "path": "0"
    },
    "447": {
      "fn": "Main.approveUserForKeyAccess",
      "jump": "o",
      "offset": [
        3387,
        3671
      ],
      "op": "JUMP",
      "path": "0"
    },
    "448": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "449": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4677,
        4701
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1C8"
    },
    "452": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4677,
        4701
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77F"
    },
    "455": {
      "fn": "Main.getSelfKeys",
      "jump": "i",
      "offset": [
        4677,
        4701
      ],
      "op": "JUMP",
      "path": "0"
    },
    "456": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4677,
        4701
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "457": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4729,
        4739
      ],
      "op": "CALLER",
      "path": "0",
      "statement": 2
    },
    "458": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "460": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "461": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "462": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "463": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4728
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "465": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "467": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "468": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "DUP2",
      "path": "0"
    },
    "469": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "470": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "472": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "DUP1",
      "path": "0"
    },
    "473": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "DUP5",
      "path": "0"
    },
    "474": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4740
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "475": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "DUP5",
      "path": "0"
    },
    "476": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "477": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "478": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "479": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "480": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "481": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "482": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "483": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "484": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "485": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "486": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "488": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "489": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "490": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP6",
      "path": "0"
    },
    "491": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "492": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "493": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "494": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "495": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "496": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP5",
      "path": "0"
    },
    "497": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "498": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "499": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP7",
      "path": "0"
    },
    "500": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "501": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "502": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "503": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "504": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "505": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "506": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "507": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "508": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "509": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "510": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "511": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "512": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4720,
        4743
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "513": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "514": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP6",
      "path": "0"
    },
    "515": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "516": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "517": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "518": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "519": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "520": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "521": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x211"
    },
    "524": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "525": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA08"
    },
    "528": {
      "fn": "Main.getSelfKeys",
      "jump": "i",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMP",
      "path": "0"
    },
    "529": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "530": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "531": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "533": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "534": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "536": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "537": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "538": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DIV",
      "path": "0"
    },
    "539": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MUL",
      "path": "0"
    },
    "540": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "542": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "543": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "545": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "546": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "547": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "548": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "549": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "551": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "552": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "553": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "554": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "555": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "556": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "557": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "558": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "559": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "561": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "562": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "563": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "564": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "565": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23D"
    },
    "568": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "569": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA08"
    },
    "572": {
      "fn": "Main.getSelfKeys",
      "jump": "i",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMP",
      "path": "0"
    },
    "573": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "574": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "575": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "576": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A"
    },
    "579": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "580": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "581": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "583": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "LT",
      "path": "0"
    },
    "584": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x25F"
    },
    "587": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "588": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "591": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "592": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "593": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "594": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DIV",
      "path": "0"
    },
    "595": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MUL",
      "path": "0"
    },
    "596": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "597": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "598": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "599": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "601": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "602": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "603": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x28A"
    },
    "606": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMP",
      "path": "0"
    },
    "607": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "608": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "609": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "610": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "611": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "612": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "614": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "615": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "617": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "619": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "620": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "621": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "622": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "623": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "624": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "625": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "626": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "627": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "629": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "630": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "631": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "633": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "634": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP1",
      "path": "0"
    },
    "635": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "636": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "GT",
      "path": "0"
    },
    "637": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x26D"
    },
    "640": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "641": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "642": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "643": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SUB",
      "path": "0"
    },
    "644": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "646": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "AND",
      "path": "0"
    },
    "647": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP3",
      "path": "0"
    },
    "648": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "649": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "650": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "651": {
      "op": "POP"
    },
    "652": {
      "op": "POP"
    },
    "653": {
      "op": "POP"
    },
    "654": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "655": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "656": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "657": {
      "op": "POP"
    },
    "658": {
      "op": "POP"
    },
    "659": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "661": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "662": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "663": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "664": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "665": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "666": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "668": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "669": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP2",
      "path": "0"
    },
    "670": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "AND",
      "path": "0"
    },
    "671": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "672": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "673": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "675": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "676": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "677": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "678": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "679": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "680": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "DUP4",
      "path": "0"
    },
    "681": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "682": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "684": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "685": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "686": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "687": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "688": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "689": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "AND",
      "path": "0"
    },
    "690": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "691": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "692": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "693": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "ADD",
      "path": "0"
    },
    "694": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "695": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4713,
        4743
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "696": {
      "fn": "Main.getSelfKeys",
      "offset": [
        4633,
        4750
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "fn": "Main.getSelfKeys",
      "jump": "o",
      "offset": [
        4633,
        4750
      ],
      "op": "JUMP",
      "path": "0"
    },
    "699": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "700": {
      "fn": "Main.checkPatient",
      "offset": [
        2371,
        2375
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "702": {
      "offset": [
        2021,
        2034
      ],
      "op": "DUP1",
      "path": "0"
    },
    "703": {
      "fn": "Main.checkPatient",
      "offset": [
        2021,
        2034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "704": {
      "offset": [
        2005,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2D1"
    },
    "707": {
      "fn": "Main.checkPatient",
      "offset": [
        2005,
        2035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "710": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "712": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "714": {
      "op": "SHL"
    },
    "715": {
      "op": "SUB"
    },
    "716": {
      "offset": [
        2021,
        2034
      ],
      "op": "AND",
      "path": "0"
    },
    "717": {
      "offset": [
        2005,
        2020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57C"
    },
    "720": {
      "jump": "i",
      "offset": [
        2005,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "721": {
      "fn": "Main.checkPatient",
      "offset": [
        2005,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "722": {
      "offset": [
        2005,
        2043
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "723": {
      "fn": "Main.checkPatient",
      "offset": [
        2005,
        2043
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "724": {
      "offset": [
        2039,
        2043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "726": {
      "offset": [
        2005,
        2043
      ],
      "op": "EQ",
      "path": "0"
    },
    "727": {
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2FB"
    },
    "730": {
      "offset": [
        1984,
        2115
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "731": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "733": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "734": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "738": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "740": {
      "op": "SHL"
    },
    "741": {
      "offset": [
        1984,
        2115
      ],
      "op": "DUP2",
      "path": "0"
    },
    "742": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "743": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "745": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "ADD",
      "path": "0"
    },
    "746": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "749": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "750": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "753": {
      "fn": "Main.checkPatient",
      "jump": "i",
      "offset": [
        1984,
        2115
      ],
      "op": "JUMP",
      "path": "0"
    },
    "754": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "755": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "757": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "758": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "DUP1",
      "path": "0"
    },
    "759": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "760": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "SUB",
      "path": "0"
    },
    "761": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "762": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "763": {
      "fn": "Main.checkPatient",
      "offset": [
        1984,
        2115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "764": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "766": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "768": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "770": {
      "op": "SHL"
    },
    "771": {
      "op": "SUB"
    },
    "772": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "DUP3",
      "path": "0"
    },
    "773": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "AND",
      "path": "0"
    },
    "774": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2424
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "776": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "777": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "778": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "779": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2435
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "781": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "783": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "784": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "DUP2",
      "path": "0"
    },
    "785": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "786": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "788": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "DUP1",
      "path": "0"
    },
    "789": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "DUP5",
      "path": "0"
    },
    "790": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2458
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "791": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "DUP5",
      "path": "0"
    },
    "792": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "793": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "794": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "795": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "796": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "797": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "DUP5",
      "path": "0"
    },
    "798": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "799": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "800": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "801": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "803": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "804": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "805": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP4",
      "path": "0"
    },
    "806": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "807": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "808": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "809": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "810": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "811": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "812": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "813": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "814": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP5",
      "path": "0"
    },
    "815": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "816": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "817": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "818": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "819": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "820": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "821": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "822": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "823": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "824": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "825": {
      "fn": "Main.checkPatient",
      "offset": [
        2427,
        2461
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "826": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP6",
      "path": "0"
    },
    "827": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "828": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "829": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "830": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "831": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "832": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "833": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "834": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x34A"
    },
    "837": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "838": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA08"
    },
    "841": {
      "fn": "Main.checkPatient",
      "jump": "i",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "842": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "843": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "844": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "846": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "847": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "849": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "850": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "851": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DIV",
      "path": "0"
    },
    "852": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MUL",
      "path": "0"
    },
    "853": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "855": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "856": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "858": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "859": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "860": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "861": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "862": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "864": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "865": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "866": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "867": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "868": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "869": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "870": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "871": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "872": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "874": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "875": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "876": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "877": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "878": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x376"
    },
    "881": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "882": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA08"
    },
    "885": {
      "fn": "Main.checkPatient",
      "jump": "i",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "886": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "887": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "888": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "889": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C3"
    },
    "892": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "893": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "894": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "896": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "LT",
      "path": "0"
    },
    "897": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x398"
    },
    "900": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "901": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "904": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "905": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP4",
      "path": "0"
    },
    "906": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "907": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DIV",
      "path": "0"
    },
    "908": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MUL",
      "path": "0"
    },
    "909": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP4",
      "path": "0"
    },
    "910": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "911": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "912": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "914": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "915": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "916": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3C3"
    },
    "919": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMP",
      "path": "0"
    },
    "920": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "921": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "922": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "923": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "924": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "925": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "927": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "928": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "930": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "932": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "933": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "934": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "935": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "936": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "937": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "938": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "939": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "940": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "942": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "943": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "944": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "946": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "947": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP1",
      "path": "0"
    },
    "948": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP4",
      "path": "0"
    },
    "949": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "GT",
      "path": "0"
    },
    "950": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3A6"
    },
    "953": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "954": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "955": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "956": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SUB",
      "path": "0"
    },
    "957": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "959": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "AND",
      "path": "0"
    },
    "960": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP3",
      "path": "0"
    },
    "961": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "962": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "963": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "964": {
      "op": "POP"
    },
    "965": {
      "op": "POP"
    },
    "966": {
      "op": "POP"
    },
    "967": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "968": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP4",
      "path": "0"
    },
    "969": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "970": {
      "op": "POP"
    },
    "971": {
      "op": "POP"
    },
    "972": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "974": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "975": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "976": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "977": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "978": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "979": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "981": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "982": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP2",
      "path": "0"
    },
    "983": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "AND",
      "path": "0"
    },
    "984": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "985": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "986": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "988": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "989": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP4",
      "path": "0"
    },
    "990": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "991": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "992": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "993": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "DUP4",
      "path": "0"
    },
    "994": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "995": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "997": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "998": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "999": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1000": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "1001": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1002": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "AND",
      "path": "0"
    },
    "1003": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1004": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1005": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1006": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "ADD",
      "path": "0"
    },
    "1007": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1008": {
      "fn": "Main.checkPatient",
      "offset": [
        2475,
        2491
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1009": {
      "fn": "Main.checkPatient",
      "offset": [
        2475,
        2491
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1010": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1011": {
      "fn": "Main.checkPatient",
      "offset": [
        2391,
        2461
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1012": {
      "op": "POP"
    },
    "1013": {
      "fn": "Main.checkPatient",
      "offset": [
        2471,
        2577
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x401"
    },
    "1016": {
      "fn": "Main.checkPatient",
      "offset": [
        2471,
        2577
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1017": {
      "op": "POP"
    },
    "1018": {
      "fn": "Main.checkPatient",
      "offset": [
        2519,
        2523
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 3,
      "value": "0x1"
    },
    "1020": {
      "fn": "Main.checkPatient",
      "offset": [
        2519,
        2523
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1021": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1022": {
      "op": "POP"
    },
    "1023": {
      "op": "POP"
    },
    "1024": {
      "fn": "Main.checkPatient",
      "jump": "o",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1025": {
      "fn": "Main.checkPatient",
      "offset": [
        2471,
        2577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1026": {
      "op": "POP"
    },
    "1027": {
      "fn": "Main.checkPatient",
      "offset": [
        2561,
        2566
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 4,
      "value": "0x0"
    },
    "1029": {
      "fn": "Main.checkPatient",
      "offset": [
        2561,
        2566
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1030": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1031": {
      "op": "POP"
    },
    "1032": {
      "op": "POP"
    },
    "1033": {
      "fn": "Main.checkPatient",
      "jump": "o",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1034": {
      "fn": "Main.checkPatient",
      "offset": [
        2471,
        2577
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1035": {
      "fn": "Main.checkPatient",
      "offset": [
        2381,
        2583
      ],
      "op": "POP",
      "path": "0"
    },
    "1036": {
      "offset": [
        2125,
        2126
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1037": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1038": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1039": {
      "fn": "Main.checkPatient",
      "offset": [
        2249,
        2583
      ],
      "op": "POP",
      "path": "0"
    },
    "1040": {
      "fn": "Main.checkPatient",
      "jump": "o",
      "offset": [
        2249,
        2583
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1041": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1042": {
      "fn": "Main.getPatientKey",
      "offset": [
        3860,
        3884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x419"
    },
    "1045": {
      "fn": "Main.getPatientKey",
      "offset": [
        3860,
        3884
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x77F"
    },
    "1048": {
      "fn": "Main.getPatientKey",
      "jump": "i",
      "offset": [
        3860,
        3884
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1049": {
      "fn": "Main.getPatientKey",
      "offset": [
        3860,
        3884
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1050": {
      "fn": "Main.getPatientKey",
      "offset": [
        3921,
        3954
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 5,
      "value": "0x422"
    },
    "1053": {
      "fn": "Main.getPatientKey",
      "offset": [
        3938,
        3953
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1054": {
      "fn": "Main.getPatientKey",
      "offset": [
        3921,
        3937
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x709"
    },
    "1057": {
      "fn": "Main.getPatientKey",
      "jump": "i",
      "offset": [
        3921,
        3954
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1058": {
      "branch": 17,
      "fn": "Main.getPatientKey",
      "offset": [
        3921,
        3954
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1059": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x47F"
    },
    "1062": {
      "branch": 17,
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1063": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1065": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1066": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1072": {
      "op": "SHL"
    },
    "1073": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1074": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1075": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1077": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1079": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1080": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "ADD",
      "path": "0"
    },
    "1081": {
      "op": "MSTORE"
    },
    "1082": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "1084": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1086": {
      "op": "DUP3"
    },
    "1087": {
      "op": "ADD"
    },
    "1088": {
      "op": "MSTORE"
    },
    "1089": {
      "op": "PUSH32",
      "value": "0x596F7520646F6E2774206861766520617070726F76616C20666F722070617469"
    },
    "1122": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1124": {
      "op": "DUP3"
    },
    "1125": {
      "op": "ADD"
    },
    "1126": {
      "op": "MSTORE"
    },
    "1127": {
      "op": "PUSH8",
      "value": "0x656E742064617461"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1138": {
      "op": "SHL"
    },
    "1139": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1141": {
      "op": "DUP3"
    },
    "1142": {
      "op": "ADD"
    },
    "1143": {
      "op": "MSTORE"
    },
    "1144": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1146": {
      "op": "ADD"
    },
    "1147": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "1150": {
      "op": "JUMP"
    },
    "1151": {
      "fn": "Main.getPatientKey",
      "offset": [
        3900,
        4020
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1152": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1158": {
      "op": "SHL"
    },
    "1159": {
      "op": "SUB"
    },
    "1160": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "DUP3",
      "path": "0",
      "statement": 6
    },
    "1161": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "AND",
      "path": "0"
    },
    "1162": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1164": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1165": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1166": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1167": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4046
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1169": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1171": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1172": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1173": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1174": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1176": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1177": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1178": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4063
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1179": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1180": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1181": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1182": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1183": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1184": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1185": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1186": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1187": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1188": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1189": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1190": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x60"
    },
    "1192": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1193": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1194": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1195": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1196": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1197": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1198": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1199": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1200": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1201": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1202": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1203": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1204": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1205": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1206": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP6",
      "path": "0"
    },
    "1207": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1208": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1209": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1210": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1211": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1212": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1213": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1214": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP5",
      "path": "0"
    },
    "1215": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1216": {
      "fn": "Main.getPatientKey",
      "offset": [
        4038,
        4066
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1217": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1218": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1219": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1220": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1221": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1222": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1223": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1224": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1225": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4D1"
    },
    "1228": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1229": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA08"
    },
    "1232": {
      "fn": "Main.getPatientKey",
      "jump": "i",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1233": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1234": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1235": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1237": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1238": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1240": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1241": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1242": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DIV",
      "path": "0"
    },
    "1243": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MUL",
      "path": "0"
    },
    "1244": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1246": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1247": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1249": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1250": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1251": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1252": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1253": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1255": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1256": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1257": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1258": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1259": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1260": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1261": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1262": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1263": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1265": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1266": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1267": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1268": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1269": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4FD"
    },
    "1272": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1273": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA08"
    },
    "1276": {
      "fn": "Main.getPatientKey",
      "jump": "i",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1277": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1278": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1279": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1280": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54A"
    },
    "1283": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1284": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1285": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1287": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "LT",
      "path": "0"
    },
    "1288": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x51F"
    },
    "1291": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1292": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x100"
    },
    "1295": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1296": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1297": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1298": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DIV",
      "path": "0"
    },
    "1299": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MUL",
      "path": "0"
    },
    "1300": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1301": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1302": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1303": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1305": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1306": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1307": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54A"
    },
    "1310": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1311": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1312": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1313": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1314": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1315": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1316": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1318": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1319": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1321": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1323": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1324": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1325": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1326": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1327": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1328": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1329": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1330": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1331": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1333": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1334": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1335": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1337": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1338": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1339": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1340": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "GT",
      "path": "0"
    },
    "1341": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x52D"
    },
    "1344": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1345": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1346": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1347": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SUB",
      "path": "0"
    },
    "1348": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1350": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "AND",
      "path": "0"
    },
    "1351": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1352": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1353": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1354": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1355": {
      "op": "POP"
    },
    "1356": {
      "op": "POP"
    },
    "1357": {
      "op": "POP"
    },
    "1358": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1359": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1360": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1361": {
      "op": "POP"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1365": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1366": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1367": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1368": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1369": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1370": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xFF"
    },
    "1372": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1373": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1374": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "AND",
      "path": "0"
    },
    "1375": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1376": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1377": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1379": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1380": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1381": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1382": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1383": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1384": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1385": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1386": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1388": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1389": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1390": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1391": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1392": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1393": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "AND",
      "path": "0"
    },
    "1394": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1395": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1396": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1397": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1398": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1399": {
      "fn": "Main.getPatientKey",
      "offset": [
        4031,
        4066
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1400": {
      "fn": "Main.getPatientKey",
      "offset": [
        3767,
        4073
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1401": {
      "op": "POP"
    },
    "1402": {
      "op": "POP"
    },
    "1403": {
      "fn": "Main.getPatientKey",
      "jump": "o",
      "offset": [
        3767,
        4073
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1404": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1405": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 7,
      "value": "0x40"
    },
    "1407": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1408": {
      "op": "PUSH4",
      "value": "0xD64799A7"
    },
    "1413": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1415": {
      "op": "SHL"
    },
    "1416": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1417": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1424": {
      "op": "SHL"
    },
    "1425": {
      "op": "SUB"
    },
    "1426": {
      "op": "DUP3"
    },
    "1427": {
      "op": "AND"
    },
    "1428": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1430": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1431": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "ADD",
      "path": "0"
    },
    "1432": {
      "op": "MSTORE"
    },
    "1433": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1750,
        1754
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1435": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1750,
        1754
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1436": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1799,
        1841
      ],
      "op": "PUSH20",
      "path": "0",
      "value": "0x602C71E4DAC47A042EE7F46E0AEE17F94A3BA0B6"
    },
    "1457": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1799,
        1841
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1458": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1875
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xD64799A7"
    },
    "1463": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1875
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1464": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1466": {
      "op": "ADD"
    },
    "1467": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1469": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1471": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1472": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1473": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1474": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "SUB",
      "path": "0"
    },
    "1475": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1476": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1478": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP8",
      "path": "0"
    },
    "1479": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "GAS",
      "path": "0"
    },
    "1480": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "CALL",
      "path": "0"
    },
    "1481": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1482": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1483": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1484": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5D9"
    },
    "1487": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1488": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1489": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1491": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1492": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "1493": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1494": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1496": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1497": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1498": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "POP",
      "path": "0"
    },
    "1499": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "POP",
      "path": "0"
    },
    "1500": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "POP",
      "path": "0"
    },
    "1501": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "POP",
      "path": "0"
    },
    "1502": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1504": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1505": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "1506": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1508": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "NOT",
      "path": "0"
    },
    "1509": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1F"
    },
    "1511": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1512": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "ADD",
      "path": "0"
    },
    "1513": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "AND",
      "path": "0"
    },
    "1514": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1515": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "ADD",
      "path": "0"
    },
    "1516": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1517": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1519": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1520": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "POP",
      "path": "0"
    },
    "1521": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1522": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "ADD",
      "path": "0"
    },
    "1523": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1524": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5FD"
    },
    "1527": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1528": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1529": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA8B"
    },
    "1532": {
      "fn": "Main.checkIfProvider",
      "jump": "i",
      "offset": [
        1789,
        1891
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1533": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1789,
        1891
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1534": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1770,
        1891
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1535": {
      "fn": "Main.checkIfProvider",
      "offset": [
        1653,
        1898
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1536": {
      "op": "POP"
    },
    "1537": {
      "op": "POP"
    },
    "1538": {
      "fn": "Main.checkIfProvider",
      "jump": "o",
      "offset": [
        1653,
        1898
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1539": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1540": {
      "offset": [
        2021,
        2034
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1542": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2021,
        2034
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1543": {
      "offset": [
        2005,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x618"
    },
    "1546": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2005,
        2035
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1551": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1553": {
      "op": "SHL"
    },
    "1554": {
      "op": "SUB"
    },
    "1555": {
      "offset": [
        2021,
        2034
      ],
      "op": "AND",
      "path": "0"
    },
    "1556": {
      "offset": [
        2005,
        2020
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57C"
    },
    "1559": {
      "jump": "i",
      "offset": [
        2005,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1560": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2005,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1561": {
      "offset": [
        2005,
        2043
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1562": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2005,
        2043
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1563": {
      "offset": [
        2039,
        2043
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1565": {
      "offset": [
        2005,
        2043
      ],
      "op": "EQ",
      "path": "0"
    },
    "1566": {
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x639"
    },
    "1569": {
      "offset": [
        1984,
        2115
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1570": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1572": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1579": {
      "op": "SHL"
    },
    "1580": {
      "offset": [
        1984,
        2115
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1581": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1582": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1584": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "ADD",
      "path": "0"
    },
    "1585": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2F2"
    },
    "1588": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1589": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA3D"
    },
    "1592": {
      "fn": "Main.addPatientToDatabase",
      "jump": "i",
      "offset": [
        1984,
        2115
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1593": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        1984,
        2115
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1603": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "AND",
      "path": "0"
    },
    "1604": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2897,
        2914
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1606": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1607": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1608": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1609": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2930
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x2"
    },
    "1611": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1613": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1614": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1615": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1616": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1618": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1619": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1620": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1621": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2917,
        2947
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1622": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        2990
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1624": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3007
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1625": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3007
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1626": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3007
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1627": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3007
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1628": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3007
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1629": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3007
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1630": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1631": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1632": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1633": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1634": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1635": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1636": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1637": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1638": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1639": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3028,
        3044
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 8
    },
    "1640": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3028,
        3044
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1641": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3028,
        3044
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1642": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "DUP5",
      "path": "0",
      "statement": 9
    },
    "1643": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1644": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1645": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2982,
        3018
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1646": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x67D"
    },
    "1649": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1650": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3066
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1651": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3066
      ],
      "op": "ADD",
      "path": "0"
    },
    "1652": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3066
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1653": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1654": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "DUP7",
      "path": "0"
    },
    "1655": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "ADD",
      "path": "0"
    },
    "1656": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1657": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x7BD"
    },
    "1660": {
      "fn": "Main.addPatientToDatabase",
      "jump": "i",
      "offset": [
        3054,
        3093
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1661": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3054,
        3093
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1662": {
      "op": "POP"
    },
    "1663": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3121
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 10,
      "value": "0x2"
    },
    "1665": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1666": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3121
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1667": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3121
      ],
      "op": "ADD",
      "path": "0"
    },
    "1668": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1669": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1670": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3124,
        3128
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x1"
    },
    "1672": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "1674": {
      "op": "NOT"
    },
    "1675": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1676": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "DUP3",
      "path": "0"
    },
    "1677": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "AND",
      "path": "0"
    },
    "1678": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1679": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "OR",
      "path": "0"
    },
    "1680": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1681": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1682": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3103,
        3128
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1683": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3152
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 11,
      "value": "0x3"
    },
    "1685": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3152
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1686": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3152
      ],
      "op": "ADD",
      "path": "0"
    },
    "1687": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1688": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1689": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1690": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1691": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "AND",
      "path": "0"
    },
    "1692": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1693": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1694": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "OR",
      "path": "0"
    },
    "1695": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1696": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3138,
        3159
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1697": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1699": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1701": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1703": {
      "op": "SHL"
    },
    "1704": {
      "op": "SUB"
    },
    "1705": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "DUP6",
      "path": "0",
      "statement": 12
    },
    "1706": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "AND",
      "path": "0"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1709": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1710": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1711": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1712": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1714": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1715": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1716": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1717": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1718": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1720": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1721": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3199
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1722": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1723": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1724": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1725": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6C5"
    },
    "1728": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1729": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAD"
    },
    "1732": {
      "fn": "Main.addPatientToDatabase",
      "jump": "i",
      "offset": [
        3169,
        3201
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1733": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1734": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1735": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1736": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "POP",
      "path": "0"
    },
    "1737": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "1738": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3169,
        3201
      ],
      "op": "POP",
      "path": "0"
    },
    "1739": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "PUSH32",
      "path": "0",
      "statement": 13,
      "value": "0xF537ABBC11693C65132FB438317BBEFDAB9FECB035A7828567AE49F76D6976C5"
    },
    "1772": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3229,
        3244
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1773": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3246,
        3266
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1774": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1776": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1777": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6FB"
    },
    "1780": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1781": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1782": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1783": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAD6"
    },
    "1786": {
      "fn": "Main.addPatientToDatabase",
      "jump": "i",
      "offset": [
        3216,
        3267
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1787": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1788": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1790": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1791": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1792": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1793": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "SUB",
      "path": "0"
    },
    "1794": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1795": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        3216,
        3267
      ],
      "op": "LOG1",
      "path": "0"
    },
    "1796": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2887,
        3274
      ],
      "op": "POP",
      "path": "0"
    },
    "1797": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2887,
        3274
      ],
      "op": "POP",
      "path": "0"
    },
    "1798": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "POP",
      "path": "0"
    },
    "1799": {
      "fn": "Main.addPatientToDatabase",
      "offset": [
        2746,
        3274
      ],
      "op": "POP",
      "path": "0"
    },
    "1800": {
      "fn": "Main.addPatientToDatabase",
      "jump": "o",
      "offset": [
        2746,
        3274
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1801": {
      "fn": "Main._approvalGranted",
      "offset": [
        4198,
        4593
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1802": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1804": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1806": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1808": {
      "op": "SHL"
    },
    "1809": {
      "op": "SUB"
    },
    "1810": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1811": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "AND",
      "path": "0"
    },
    "1812": {
      "fn": "Main._approvalGranted",
      "offset": [
        4295,
        4299
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1814": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1815": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1816": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1817": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4365
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "1819": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1821": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1822": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1824": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1825": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1826": {
      "fn": "Main._approvalGranted",
      "offset": [
        4347,
        4382
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1827": {
      "fn": "Main._approvalGranted",
      "offset": [
        4295,
        4299
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1828": {
      "fn": "Main._approvalGranted",
      "offset": [
        4392,
        4565
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1829": {
      "fn": "Main._approvalGranted",
      "offset": [
        4416,
        4437
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1830": {
      "fn": "Main._approvalGranted",
      "offset": [
        4412,
        4413
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1831": {
      "fn": "Main._approvalGranted",
      "offset": [
        4412,
        4437
      ],
      "op": "LT",
      "path": "0"
    },
    "1832": {
      "fn": "Main._approvalGranted",
      "offset": [
        4392,
        4565
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1833": {
      "fn": "Main._approvalGranted",
      "offset": [
        4392,
        4565
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x775"
    },
    "1836": {
      "fn": "Main._approvalGranted",
      "offset": [
        4392,
        4565
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1837": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1839": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1841": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1843": {
      "op": "SHL"
    },
    "1844": {
      "op": "SUB"
    },
    "1845": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1846": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1847": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "AND",
      "path": "0"
    },
    "1848": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1850": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1851": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1852": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1853": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4475
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1855": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x20"
    },
    "1857": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1858": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1859": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1860": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1862": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1863": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "DUP4",
      "path": "0"
    },
    "1864": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4492
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1865": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "DUP6",
      "path": "0"
    },
    "1866": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "DUP5",
      "path": "0"
    },
    "1867": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1868": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1869": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1870": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1871": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1872": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "KECCAK256",
      "path": "0"
    },
    "1873": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1874": {
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4495
      ],
      "op": "AND",
      "path": "0"
    },
    "1875": {
      "fn": "Main._approvalGranted",
      "offset": [
        4499,
        4509
      ],
      "op": "CALLER",
      "path": "0"
    },
    "1876": {
      "branch": 18,
      "fn": "Main._approvalGranted",
      "offset": [
        4462,
        4509
      ],
      "op": "EQ",
      "path": "0"
    },
    "1877": {
      "fn": "Main._approvalGranted",
      "offset": [
        4458,
        4555
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1878": {
      "fn": "Main._approvalGranted",
      "offset": [
        4458,
        4555
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x763"
    },
    "1881": {
      "branch": 18,
      "fn": "Main._approvalGranted",
      "offset": [
        4458,
        4555
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1882": {
      "op": "POP"
    },
    "1883": {
      "fn": "Main._approvalGranted",
      "offset": [
        4536,
        4540
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 14,
      "value": "0x1"
    },
    "1885": {
      "fn": "Main._approvalGranted",
      "offset": [
        4536,
        4540
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1886": {
      "fn": "Main._approvalGranted",
      "offset": [
        4198,
        4593
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1887": {
      "op": "POP"
    },
    "1888": {
      "op": "POP"
    },
    "1889": {
      "op": "POP"
    },
    "1890": {
      "fn": "Main._approvalGranted",
      "jump": "o",
      "offset": [
        4198,
        4593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1891": {
      "fn": "Main._approvalGranted",
      "offset": [
        4458,
        4555
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1892": {
      "fn": "Main._approvalGranted",
      "offset": [
        4439,
        4442
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 15
    },
    "1893": {
      "fn": "Main._approvalGranted",
      "offset": [
        4439,
        4442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x76D"
    },
    "1896": {
      "fn": "Main._approvalGranted",
      "offset": [
        4439,
        4442
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1897": {
      "fn": "Main._approvalGranted",
      "offset": [
        4439,
        4442
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xAAD"
    },
    "1900": {
      "fn": "Main._approvalGranted",
      "jump": "i",
      "offset": [
        4439,
        4442
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1901": {
      "fn": "Main._approvalGranted",
      "offset": [
        4439,
        4442
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1902": {
      "fn": "Main._approvalGranted",
      "offset": [
        4439,
        4442
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "1903": {
      "fn": "Main._approvalGranted",
      "offset": [
        4439,
        4442
      ],
      "op": "POP",
      "path": "0"
    },
    "1904": {
      "fn": "Main._approvalGranted",
      "offset": [
        4439,
        4442
      ],
      "op": "POP",
      "path": "0"
    },
    "1905": {
      "fn": "Main._approvalGranted",
      "offset": [
        4392,
        4565
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x724"
    },
    "1908": {
      "fn": "Main._approvalGranted",
      "offset": [
        4392,
        4565
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1909": {
      "fn": "Main._approvalGranted",
      "offset": [
        4392,
        4565
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1910": {
      "op": "POP"
    },
    "1911": {
      "fn": "Main._approvalGranted",
      "offset": [
        4581,
        4586
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 16,
      "value": "0x0"
    },
    "1913": {
      "fn": "Main._approvalGranted",
      "offset": [
        4581,
        4586
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "1914": {
      "fn": "Main._approvalGranted",
      "offset": [
        4198,
        4593
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "1915": {
      "op": "POP"
    },
    "1916": {
      "op": "POP"
    },
    "1917": {
      "op": "POP"
    },
    "1918": {
      "fn": "Main._approvalGranted",
      "jump": "o",
      "offset": [
        4198,
        4593
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1919": {
      "op": "JUMPDEST"
    },
    "1920": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1922": {
      "op": "MLOAD"
    },
    "1923": {
      "op": "DUP1"
    },
    "1924": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1926": {
      "op": "ADD"
    },
    "1927": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1929": {
      "op": "MSTORE"
    },
    "1930": {
      "op": "DUP1"
    },
    "1931": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1933": {
      "op": "DUP2"
    },
    "1934": {
      "op": "MSTORE"
    },
    "1935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1937": {
      "op": "ADD"
    },
    "1938": {
      "op": "PUSH2",
      "value": "0x7B0"
    },
    "1941": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1943": {
      "op": "MLOAD"
    },
    "1944": {
      "op": "DUP1"
    },
    "1945": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1947": {
      "op": "ADD"
    },
    "1948": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1950": {
      "op": "MSTORE"
    },
    "1951": {
      "op": "DUP1"
    },
    "1952": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1954": {
      "op": "DUP2"
    },
    "1955": {
      "op": "MSTORE"
    },
    "1956": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1958": {
      "op": "ADD"
    },
    "1959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1961": {
      "op": "ISZERO"
    },
    "1962": {
      "op": "ISZERO"
    },
    "1963": {
      "op": "DUP2"
    },
    "1964": {
      "op": "MSTORE"
    },
    "1965": {
      "op": "POP"
    },
    "1966": {
      "op": "SWAP1"
    },
    "1967": {
      "op": "JUMP"
    },
    "1968": {
      "op": "JUMPDEST"
    },
    "1969": {
      "op": "DUP2"
    },
    "1970": {
      "op": "MSTORE"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1973": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1975": {
      "op": "SWAP1"
    },
    "1976": {
      "op": "SWAP2"
    },
    "1977": {
      "op": "ADD"
    },
    "1978": {
      "op": "MSTORE"
    },
    "1979": {
      "op": "SWAP1"
    },
    "1980": {
      "jump": "o",
      "op": "JUMP"
    },
    "1981": {
      "op": "JUMPDEST"
    },
    "1982": {
      "op": "DUP3"
    },
    "1983": {
      "op": "DUP1"
    },
    "1984": {
      "op": "SLOAD"
    },
    "1985": {
      "op": "PUSH2",
      "value": "0x7C9"
    },
    "1988": {
      "op": "SWAP1"
    },
    "1989": {
      "op": "PUSH2",
      "value": "0xA08"
    },
    "1992": {
      "jump": "i",
      "op": "JUMP"
    },
    "1993": {
      "op": "JUMPDEST"
    },
    "1994": {
      "op": "SWAP1"
    },
    "1995": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1997": {
      "op": "MSTORE"
    },
    "1998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2000": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2002": {
      "op": "KECCAK256"
    },
    "2003": {
      "op": "SWAP1"
    },
    "2004": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2006": {
      "op": "ADD"
    },
    "2007": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2009": {
      "op": "SWAP1"
    },
    "2010": {
      "op": "DIV"
    },
    "2011": {
      "op": "DUP2"
    },
    "2012": {
      "op": "ADD"
    },
    "2013": {
      "op": "SWAP3"
    },
    "2014": {
      "op": "DUP3"
    },
    "2015": {
      "op": "PUSH2",
      "value": "0x7EB"
    },
    "2018": {
      "op": "JUMPI"
    },
    "2019": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2021": {
      "op": "DUP6"
    },
    "2022": {
      "op": "SSTORE"
    },
    "2023": {
      "op": "PUSH2",
      "value": "0x831"
    },
    "2026": {
      "op": "JUMP"
    },
    "2027": {
      "op": "JUMPDEST"
    },
    "2028": {
      "op": "DUP3"
    },
    "2029": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2031": {
      "op": "LT"
    },
    "2032": {
      "op": "PUSH2",
      "value": "0x804"
    },
    "2035": {
      "op": "JUMPI"
    },
    "2036": {
      "op": "DUP1"
    },
    "2037": {
      "op": "MLOAD"
    },
    "2038": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2040": {
      "op": "NOT"
    },
    "2041": {
      "op": "AND"
    },
    "2042": {
      "op": "DUP4"
    },
    "2043": {
      "op": "DUP1"
    },
    "2044": {
      "op": "ADD"
    },
    "2045": {
      "op": "OR"
    },
    "2046": {
      "op": "DUP6"
    },
    "2047": {
      "op": "SSTORE"
    },
    "2048": {
      "op": "PUSH2",
      "value": "0x831"
    },
    "2051": {
      "op": "JUMP"
    },
    "2052": {
      "op": "JUMPDEST"
    },
    "2053": {
      "op": "DUP3"
    },
    "2054": {
      "op": "DUP1"
    },
    "2055": {
      "op": "ADD"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2058": {
      "op": "ADD"
    },
    "2059": {
      "op": "DUP6"
    },
    "2060": {
      "op": "SSTORE"
    },
    "2061": {
      "op": "DUP3"
    },
    "2062": {
      "op": "ISZERO"
    },
    "2063": {
      "op": "PUSH2",
      "value": "0x831"
    },
    "2066": {
      "op": "JUMPI"
    },
    "2067": {
      "op": "SWAP2"
    },
    "2068": {
      "op": "DUP3"
    },
    "2069": {
      "op": "ADD"
    },
    "2070": {
      "op": "JUMPDEST"
    },
    "2071": {
      "op": "DUP3"
    },
    "2072": {
      "op": "DUP2"
    },
    "2073": {
      "op": "GT"
    },
    "2074": {
      "op": "ISZERO"
    },
    "2075": {
      "op": "PUSH2",
      "value": "0x831"
    },
    "2078": {
      "op": "JUMPI"
    },
    "2079": {
      "op": "DUP3"
    },
    "2080": {
      "op": "MLOAD"
    },
    "2081": {
      "op": "DUP3"
    },
    "2082": {
      "op": "SSTORE"
    },
    "2083": {
      "op": "SWAP2"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2086": {
      "op": "ADD"
    },
    "2087": {
      "op": "SWAP2"
    },
    "2088": {
      "op": "SWAP1"
    },
    "2089": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2091": {
      "op": "ADD"
    },
    "2092": {
      "op": "SWAP1"
    },
    "2093": {
      "op": "PUSH2",
      "value": "0x816"
    },
    "2096": {
      "op": "JUMP"
    },
    "2097": {
      "op": "JUMPDEST"
    },
    "2098": {
      "op": "POP"
    },
    "2099": {
      "op": "PUSH2",
      "value": "0x83D"
    },
    "2102": {
      "op": "SWAP3"
    },
    "2103": {
      "op": "SWAP2"
    },
    "2104": {
      "op": "POP"
    },
    "2105": {
      "op": "PUSH2",
      "value": "0x841"
    },
    "2108": {
      "jump": "i",
      "op": "JUMP"
    },
    "2109": {
      "op": "JUMPDEST"
    },
    "2110": {
      "op": "POP"
    },
    "2111": {
      "op": "SWAP1"
    },
    "2112": {
      "jump": "o",
      "op": "JUMP"
    },
    "2113": {
      "op": "JUMPDEST"
    },
    "2114": {
      "op": "JUMPDEST"
    },
    "2115": {
      "op": "DUP1"
    },
    "2116": {
      "op": "DUP3"
    },
    "2117": {
      "op": "GT"
    },
    "2118": {
      "op": "ISZERO"
    },
    "2119": {
      "op": "PUSH2",
      "value": "0x83D"
    },
    "2122": {
      "op": "JUMPI"
    },
    "2123": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2125": {
      "op": "DUP2"
    },
    "2126": {
      "op": "SSTORE"
    },
    "2127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2129": {
      "op": "ADD"
    },
    "2130": {
      "op": "PUSH2",
      "value": "0x842"
    },
    "2133": {
      "op": "JUMP"
    },
    "2134": {
      "op": "JUMPDEST"
    },
    "2135": {
      "op": "DUP1"
    },
    "2136": {
      "op": "CALLDATALOAD"
    },
    "2137": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2139": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2141": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2143": {
      "op": "SHL"
    },
    "2144": {
      "op": "SUB"
    },
    "2145": {
      "op": "DUP2"
    },
    "2146": {
      "op": "AND"
    },
    "2147": {
      "op": "DUP2"
    },
    "2148": {
      "op": "EQ"
    },
    "2149": {
      "op": "PUSH2",
      "value": "0x40C"
    },
    "2152": {
      "op": "JUMPI"
    },
    "2153": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2155": {
      "op": "DUP1"
    },
    "2156": {
      "op": "REVERT"
    },
    "2157": {
      "op": "JUMPDEST"
    },
    "2158": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2160": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2162": {
      "op": "DUP3"
    },
    "2163": {
      "op": "DUP5"
    },
    "2164": {
      "op": "SUB"
    },
    "2165": {
      "op": "SLT"
    },
    "2166": {
      "op": "ISZERO"
    },
    "2167": {
      "op": "PUSH2",
      "value": "0x87F"
    },
    "2170": {
      "op": "JUMPI"
    },
    "2171": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2173": {
      "op": "DUP1"
    },
    "2174": {
      "op": "REVERT"
    },
    "2175": {
      "op": "JUMPDEST"
    },
    "2176": {
      "op": "PUSH2",
      "value": "0x888"
    },
    "2179": {
      "op": "DUP3"
    },
    "2180": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "2183": {
      "jump": "i",
      "op": "JUMP"
    },
    "2184": {
      "op": "JUMPDEST"
    },
    "2185": {
      "op": "SWAP4"
    },
    "2186": {
      "op": "SWAP3"
    },
    "2187": {
      "op": "POP"
    },
    "2188": {
      "op": "POP"
    },
    "2189": {
      "op": "POP"
    },
    "2190": {
      "jump": "o",
      "op": "JUMP"
    },
    "2191": {
      "op": "JUMPDEST"
    },
    "2192": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2194": {
      "op": "DUP2"
    },
    "2195": {
      "op": "MLOAD"
    },
    "2196": {
      "op": "DUP1"
    },
    "2197": {
      "op": "DUP5"
    },
    "2198": {
      "op": "MSTORE"
    },
    "2199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2201": {
      "op": "JUMPDEST"
    },
    "2202": {
      "op": "DUP2"
    },
    "2203": {
      "op": "DUP2"
    },
    "2204": {
      "op": "LT"
    },
    "2205": {
      "op": "ISZERO"
    },
    "2206": {
      "op": "PUSH2",
      "value": "0x8B5"
    },
    "2209": {
      "op": "JUMPI"
    },
    "2210": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2212": {
      "op": "DUP2"
    },
    "2213": {
      "op": "DUP6"
    },
    "2214": {
      "op": "ADD"
    },
    "2215": {
      "op": "DUP2"
    },
    "2216": {
      "op": "ADD"
    },
    "2217": {
      "op": "MLOAD"
    },
    "2218": {
      "op": "DUP7"
    },
    "2219": {
      "op": "DUP4"
    },
    "2220": {
      "op": "ADD"
    },
    "2221": {
      "op": "DUP3"
    },
    "2222": {
      "op": "ADD"
    },
    "2223": {
      "op": "MSTORE"
    },
    "2224": {
      "op": "ADD"
    },
    "2225": {
      "op": "PUSH2",
      "value": "0x899"
    },
    "2228": {
      "op": "JUMP"
    },
    "2229": {
      "op": "JUMPDEST"
    },
    "2230": {
      "op": "DUP2"
    },
    "2231": {
      "op": "DUP2"
    },
    "2232": {
      "op": "GT"
    },
    "2233": {
      "op": "ISZERO"
    },
    "2234": {
      "op": "PUSH2",
      "value": "0x8C7"
    },
    "2237": {
      "op": "JUMPI"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2240": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2242": {
      "op": "DUP4"
    },
    "2243": {
      "op": "DUP8"
    },
    "2244": {
      "op": "ADD"
    },
    "2245": {
      "op": "ADD"
    },
    "2246": {
      "op": "MSTORE"
    },
    "2247": {
      "op": "JUMPDEST"
    },
    "2248": {
      "op": "POP"
    },
    "2249": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2251": {
      "op": "ADD"
    },
    "2252": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2254": {
      "op": "NOT"
    },
    "2255": {
      "op": "AND"
    },
    "2256": {
      "op": "SWAP3"
    },
    "2257": {
      "op": "SWAP1"
    },
    "2258": {
      "op": "SWAP3"
    },
    "2259": {
      "op": "ADD"
    },
    "2260": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2262": {
      "op": "ADD"
    },
    "2263": {
      "op": "SWAP3"
    },
    "2264": {
      "op": "SWAP2"
    },
    "2265": {
      "op": "POP"
    },
    "2266": {
      "op": "POP"
    },
    "2267": {
      "jump": "o",
      "op": "JUMP"
    },
    "2268": {
      "op": "JUMPDEST"
    },
    "2269": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2271": {
      "op": "DUP2"
    },
    "2272": {
      "op": "MSTORE"
    },
    "2273": {
      "op": "DUP2"
    },
    "2274": {
      "op": "MLOAD"
    },
    "2275": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2277": {
      "op": "DUP3"
    },
    "2278": {
      "op": "ADD"
    },
    "2279": {
      "op": "MSTORE"
    },
    "2280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2282": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2284": {
      "op": "DUP4"
    },
    "2285": {
      "op": "ADD"
    },
    "2286": {
      "op": "MLOAD"
    },
    "2287": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2289": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2291": {
      "op": "DUP5"
    },
    "2292": {
      "op": "ADD"
    },
    "2293": {
      "op": "MSTORE"
    },
    "2294": {
      "op": "DUP1"
    },
    "2295": {
      "op": "MLOAD"
    },
    "2296": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2298": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2300": {
      "op": "DUP6"
    },
    "2301": {
      "op": "ADD"
    },
    "2302": {
      "op": "MSTORE"
    },
    "2303": {
      "op": "PUSH2",
      "value": "0x90B"
    },
    "2306": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "2308": {
      "op": "DUP6"
    },
    "2309": {
      "op": "ADD"
    },
    "2310": {
      "op": "DUP3"
    },
    "2311": {
      "op": "PUSH2",
      "value": "0x88F"
    },
    "2314": {
      "jump": "i",
      "op": "JUMP"
    },
    "2315": {
      "op": "JUMPDEST"
    },
    "2316": {
      "op": "SWAP1"
    },
    "2317": {
      "op": "POP"
    },
    "2318": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2320": {
      "op": "DUP3"
    },
    "2321": {
      "op": "ADD"
    },
    "2322": {
      "op": "MLOAD"
    },
    "2323": {
      "op": "ISZERO"
    },
    "2324": {
      "op": "ISZERO"
    },
    "2325": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2327": {
      "op": "DUP6"
    },
    "2328": {
      "op": "ADD"
    },
    "2329": {
      "op": "MSTORE"
    },
    "2330": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2332": {
      "op": "DUP6"
    },
    "2333": {
      "op": "ADD"
    },
    "2334": {
      "op": "MLOAD"
    },
    "2335": {
      "op": "ISZERO"
    },
    "2336": {
      "op": "ISZERO"
    },
    "2337": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2339": {
      "op": "DUP6"
    },
    "2340": {
      "op": "ADD"
    },
    "2341": {
      "op": "MSTORE"
    },
    "2342": {
      "op": "DUP1"
    },
    "2343": {
      "op": "SWAP3"
    },
    "2344": {
      "op": "POP"
    },
    "2345": {
      "op": "POP"
    },
    "2346": {
      "op": "POP"
    },
    "2347": {
      "op": "SWAP3"
    },
    "2348": {
      "op": "SWAP2"
    },
    "2349": {
      "op": "POP"
    },
    "2350": {
      "op": "POP"
    },
    "2351": {
      "jump": "o",
      "op": "JUMP"
    },
    "2352": {
      "op": "JUMPDEST"
    },
    "2353": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2363": {
      "op": "MSTORE"
    },
    "2364": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "2366": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2368": {
      "op": "MSTORE"
    },
    "2369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2371": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2373": {
      "op": "REVERT"
    },
    "2374": {
      "op": "JUMPDEST"
    },
    "2375": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2377": {
      "op": "DUP1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2380": {
      "op": "DUP4"
    },
    "2381": {
      "op": "DUP6"
    },
    "2382": {
      "op": "SUB"
    },
    "2383": {
      "op": "SLT"
    },
    "2384": {
      "op": "ISZERO"
    },
    "2385": {
      "op": "PUSH2",
      "value": "0x959"
    },
    "2388": {
      "op": "JUMPI"
    },
    "2389": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2391": {
      "op": "DUP1"
    },
    "2392": {
      "op": "REVERT"
    },
    "2393": {
      "op": "JUMPDEST"
    },
    "2394": {
      "op": "PUSH2",
      "value": "0x962"
    },
    "2397": {
      "op": "DUP4"
    },
    "2398": {
      "op": "PUSH2",
      "value": "0x856"
    },
    "2401": {
      "jump": "i",
      "op": "JUMP"
    },
    "2402": {
      "op": "JUMPDEST"
    },
    "2403": {
      "op": "SWAP2"
    },
    "2404": {
      "op": "POP"
    },
    "2405": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2407": {
      "op": "DUP4"
    },
    "2408": {
      "op": "ADD"
    },
    "2409": {
      "op": "CALLDATALOAD"
    },
    "2410": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "2419": {
      "op": "DUP1"
    },
    "2420": {
      "op": "DUP3"
    },
    "2421": {
      "op": "GT"
    },
    "2422": {
      "op": "ISZERO"
    },
    "2423": {
      "op": "PUSH2",
      "value": "0x97F"
    },
    "2426": {
      "op": "JUMPI"
    },
    "2427": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2429": {
      "op": "DUP1"
    },
    "2430": {
      "op": "REVERT"
    },
    "2431": {
      "op": "JUMPDEST"
    },
    "2432": {
      "op": "DUP2"
    },
    "2433": {
      "op": "DUP6"
    },
    "2434": {
      "op": "ADD"
    },
    "2435": {
      "op": "SWAP2"
    },
    "2436": {
      "op": "POP"
    },
    "2437": {
      "op": "DUP6"
    },
    "2438": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2440": {
      "op": "DUP4"
    },
    "2441": {
      "op": "ADD"
    },
    "2442": {
      "op": "SLT"
    },
    "2443": {
      "op": "PUSH2",
      "value": "0x993"
    },
    "2446": {
      "op": "JUMPI"
    },
    "2447": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2449": {
      "op": "DUP1"
    },
    "2450": {
      "op": "REVERT"
    },
    "2451": {
      "op": "JUMPDEST"
    },
    "2452": {
      "op": "DUP2"
    },
    "2453": {
      "op": "CALLDATALOAD"
    },
    "2454": {
      "op": "DUP2"
    },
    "2455": {
      "op": "DUP2"
    },
    "2456": {
      "op": "GT"
    },
    "2457": {
      "op": "ISZERO"
    },
    "2458": {
      "op": "PUSH2",
      "value": "0x9A5"
    },
    "2461": {
      "op": "JUMPI"
    },
    "2462": {
      "op": "PUSH2",
      "value": "0x9A5"
    },
    "2465": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "2468": {
      "jump": "i",
      "op": "JUMP"
    },
    "2469": {
      "op": "JUMPDEST"
    },
    "2470": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2472": {
      "op": "MLOAD"
    },
    "2473": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2475": {
      "op": "DUP3"
    },
    "2476": {
      "op": "ADD"
    },
    "2477": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2479": {
      "op": "NOT"
    },
    "2480": {
      "op": "SWAP1"
    },
    "2481": {
      "op": "DUP2"
    },
    "2482": {
      "op": "AND"
    },
    "2483": {
      "op": "PUSH1",
      "value": "0x3F"
    },
    "2485": {
      "op": "ADD"
    },
    "2486": {
      "op": "AND"
    },
    "2487": {
      "op": "DUP2"
    },
    "2488": {
      "op": "ADD"
    },
    "2489": {
      "op": "SWAP1"
    },
    "2490": {
      "op": "DUP4"
    },
    "2491": {
      "op": "DUP3"
    },
    "2492": {
      "op": "GT"
    },
    "2493": {
      "op": "DUP2"
    },
    "2494": {
      "op": "DUP4"
    },
    "2495": {
      "op": "LT"
    },
    "2496": {
      "op": "OR"
    },
    "2497": {
      "op": "ISZERO"
    },
    "2498": {
      "op": "PUSH2",
      "value": "0x9CD"
    },
    "2501": {
      "op": "JUMPI"
    },
    "2502": {
      "op": "PUSH2",
      "value": "0x9CD"
    },
    "2505": {
      "op": "PUSH2",
      "value": "0x930"
    },
    "2508": {
      "jump": "i",
      "op": "JUMP"
    },
    "2509": {
      "op": "JUMPDEST"
    },
    "2510": {
      "op": "DUP2"
    },
    "2511": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2513": {
      "op": "MSTORE"
    },
    "2514": {
      "op": "DUP3"
    },
    "2515": {
      "op": "DUP2"
    },
    "2516": {
      "op": "MSTORE"
    },
    "2517": {
      "op": "DUP9"
    },
    "2518": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2520": {
      "op": "DUP5"
    },
    "2521": {
      "op": "DUP8"
    },
    "2522": {
      "op": "ADD"
    },
    "2523": {
      "op": "ADD"
    },
    "2524": {
      "op": "GT"
    },
    "2525": {
      "op": "ISZERO"
    },
    "2526": {
      "op": "PUSH2",
      "value": "0x9E6"
    },
    "2529": {
      "op": "JUMPI"
    },
    "2530": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2532": {
      "op": "DUP1"
    },
    "2533": {
      "op": "REVERT"
    },
    "2534": {
      "op": "JUMPDEST"
    },
    "2535": {
      "op": "DUP3"
    },
    "2536": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2538": {
      "op": "DUP7"
    },
    "2539": {
      "op": "ADD"
    },
    "2540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2542": {
      "op": "DUP4"
    },
    "2543": {
      "op": "ADD"
    },
    "2544": {
      "op": "CALLDATACOPY"
    },
    "2545": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2547": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2549": {
      "op": "DUP5"
    },
    "2550": {
      "op": "DUP4"
    },
    "2551": {
      "op": "ADD"
    },
    "2552": {
      "op": "ADD"
    },
    "2553": {
      "op": "MSTORE"
    },
    "2554": {
      "op": "DUP1"
    },
    "2555": {
      "op": "SWAP6"
    },
    "2556": {
      "op": "POP"
    },
    "2557": {
      "op": "POP"
    },
    "2558": {
      "op": "POP"
    },
    "2559": {
      "op": "POP"
    },
    "2560": {
      "op": "POP"
    },
    "2561": {
      "op": "POP"
    },
    "2562": {
      "op": "SWAP3"
    },
    "2563": {
      "op": "POP"
    },
    "2564": {
      "op": "SWAP3"
    },
    "2565": {
      "op": "SWAP1"
    },
    "2566": {
      "op": "POP"
    },
    "2567": {
      "jump": "o",
      "op": "JUMP"
    },
    "2568": {
      "op": "JUMPDEST"
    },
    "2569": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2571": {
      "op": "DUP2"
    },
    "2572": {
      "op": "DUP2"
    },
    "2573": {
      "op": "SHR"
    },
    "2574": {
      "op": "SWAP1"
    },
    "2575": {
      "op": "DUP3"
    },
    "2576": {
      "op": "AND"
    },
    "2577": {
      "op": "DUP1"
    },
    "2578": {
      "op": "PUSH2",
      "value": "0xA1C"
    },
    "2581": {
      "op": "JUMPI"
    },
    "2582": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "2584": {
      "op": "DUP3"
    },
    "2585": {
      "op": "AND"
    },
    "2586": {
      "op": "SWAP2"
    },
    "2587": {
      "op": "POP"
    },
    "2588": {
      "op": "JUMPDEST"
    },
    "2589": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2591": {
      "op": "DUP3"
    },
    "2592": {
      "op": "LT"
    },
    "2593": {
      "op": "DUP2"
    },
    "2594": {
      "op": "EQ"
    },
    "2595": {
      "op": "ISZERO"
    },
    "2596": {
      "op": "PUSH2",
      "value": "0x40A"
    },
    "2599": {
      "op": "JUMPI"
    },
    "2600": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2605": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2607": {
      "op": "SHL"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2610": {
      "op": "MSTORE"
    },
    "2611": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2613": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2615": {
      "op": "MSTORE"
    },
    "2616": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2618": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2620": {
      "op": "REVERT"
    },
    "2621": {
      "op": "JUMPDEST"
    },
    "2622": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2624": {
      "op": "DUP1"
    },
    "2625": {
      "op": "DUP3"
    },
    "2626": {
      "op": "MSTORE"
    },
    "2627": {
      "op": "PUSH1",
      "value": "0x2E"
    },
    "2629": {
      "op": "SWAP1"
    },
    "2630": {
      "op": "DUP3"
    },
    "2631": {
      "op": "ADD"
    },
    "2632": {
      "op": "MSTORE"
    },
    "2633": {
      "op": "PUSH32",
      "value": "0x596F75206D75737420626520612070726F766964657220746F20616363657373"
    },
    "2666": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2668": {
      "op": "DUP3"
    },
    "2669": {
      "op": "ADD"
    },
    "2670": {
      "op": "MSTORE"
    },
    "2671": {
      "op": "PUSH14",
      "value": "0x103A3434B990333AB731BA34B7B7"
    },
    "2686": {
      "op": "PUSH1",
      "value": "0x91"
    },
    "2688": {
      "op": "SHL"
    },
    "2689": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "2691": {
      "op": "DUP3"
    },
    "2692": {
      "op": "ADD"
    },
    "2693": {
      "op": "MSTORE"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "2696": {
      "op": "ADD"
    },
    "2697": {
      "op": "SWAP1"
    },
    "2698": {
      "jump": "o",
      "op": "JUMP"
    },
    "2699": {
      "op": "JUMPDEST"
    },
    "2700": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2702": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2704": {
      "op": "DUP3"
    },
    "2705": {
      "op": "DUP5"
    },
    "2706": {
      "op": "SUB"
    },
    "2707": {
      "op": "SLT"
    },
    "2708": {
      "op": "ISZERO"
    },
    "2709": {
      "op": "PUSH2",
      "value": "0xA9D"
    },
    "2712": {
      "op": "JUMPI"
    },
    "2713": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2715": {
      "op": "DUP1"
    },
    "2716": {
      "op": "REVERT"
    },
    "2717": {
      "op": "JUMPDEST"
    },
    "2718": {
      "op": "DUP2"
    },
    "2719": {
      "op": "MLOAD"
    },
    "2720": {
      "op": "DUP1"
    },
    "2721": {
      "op": "ISZERO"
    },
    "2722": {
      "op": "ISZERO"
    },
    "2723": {
      "op": "DUP2"
    },
    "2724": {
      "op": "EQ"
    },
    "2725": {
      "op": "PUSH2",
      "value": "0x888"
    },
    "2728": {
      "op": "JUMPI"
    },
    "2729": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2731": {
      "op": "DUP1"
    },
    "2732": {
      "op": "REVERT"
    },
    "2733": {
      "op": "JUMPDEST"
    },
    "2734": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2736": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2738": {
      "op": "NOT"
    },
    "2739": {
      "op": "DUP3"
    },
    "2740": {
      "op": "EQ"
    },
    "2741": {
      "op": "ISZERO"
    },
    "2742": {
      "op": "PUSH2",
      "value": "0xACF"
    },
    "2745": {
      "op": "JUMPI"
    },
    "2746": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2751": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2753": {
      "op": "SHL"
    },
    "2754": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2756": {
      "op": "MSTORE"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "2759": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2761": {
      "op": "MSTORE"
    },
    "2762": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2766": {
      "op": "REVERT"
    },
    "2767": {
      "op": "JUMPDEST"
    },
    "2768": {
      "op": "POP"
    },
    "2769": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2771": {
      "op": "ADD"
    },
    "2772": {
      "op": "SWAP1"
    },
    "2773": {
      "jump": "o",
      "op": "JUMP"
    },
    "2774": {
      "op": "JUMPDEST"
    },
    "2775": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2777": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2781": {
      "op": "SHL"
    },
    "2782": {
      "op": "SUB"
    },
    "2783": {
      "op": "DUP4"
    },
    "2784": {
      "op": "AND"
    },
    "2785": {
      "op": "DUP2"
    },
    "2786": {
      "op": "MSTORE"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2789": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2791": {
      "op": "DUP3"
    },
    "2792": {
      "op": "ADD"
    },
    "2793": {
      "op": "DUP2"
    },
    "2794": {
      "op": "SWAP1"
    },
    "2795": {
      "op": "MSTORE"
    },
    "2796": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2798": {
      "op": "SWAP1"
    },
    "2799": {
      "op": "PUSH2",
      "value": "0xAFA"
    },
    "2802": {
      "op": "SWAP1"
    },
    "2803": {
      "op": "DUP4"
    },
    "2804": {
      "op": "ADD"
    },
    "2805": {
      "op": "DUP5"
    },
    "2806": {
      "op": "PUSH2",
      "value": "0x88F"
    },
    "2809": {
      "jump": "i",
      "op": "JUMP"
    },
    "2810": {
      "op": "JUMPDEST"
    },
    "2811": {
      "op": "SWAP5"
    },
    "2812": {
      "op": "SWAP4"
    },
    "2813": {
      "op": "POP"
    },
    "2814": {
      "op": "POP"
    },
    "2815": {
      "op": "POP"
    },
    "2816": {
      "op": "POP"
    },
    "2817": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "fd1d4e8d537d57439440d95d5231dfce18a6d0c6",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.6 <0.9.0;\n\n// To allow higher permissions for event having a custom data type (struct)\npragma experimental ABIEncoderV2;\n\n// Interface for Provider Contract Interaction\ninterface IProvider {\n    function checkIfProvider(address _AddressOfUser)\n        external\n        payable\n        returns (bool);\n}\n\ncontract Main {\n    /// variables ///\n    /// @dev Address of the user\n    address public AddressOfUser;\n\n    constructor() {\n        AddressOfUser = msg.sender;\n    }\n\n    struct AccessKey {\n        string Key;\n        bool Valid;\n    }\n\n    struct PatientsData {\n        uint256 id;\n        AccessKey PatientKey;\n        bool ValidPatient;\n    }\n\n    /// @notice EVENTS for Data in blockchain\n    event ValidatePatient(uint256 id, bool ValidPatient);\n    event InvalidatePatient(uint256 id, bool ValidPatient);\n    event PatientAdded(address _PatientAddress, string _PatientKeyGenerated);\n    event UserApproved(address _approveTo, address User);\n\n    /// @dev Main Database of the Keys and Patients\n    mapping(address => mapping(uint256 => PatientsData)) Patients;\n    /// @dev This will keep record of the keys generated by the patient\n    mapping(address => uint256) KeysGenerated;\n    /// @dev Keeps the mapping of the total approved users to access the key of particular patient address\n    mapping(address => uint256) TotalApprovedUsers;\n    /// @dev Keeping the track of Approved User Address of the patient\n    mapping(address => mapping(uint256 => address)) ApprovedUsers;\n\n    /// @dev To check if the user is a provider is not\n    /// @param _AddressOfUser Address of the user\n    function checkIfProvider(address _AddressOfUser)\n        public\n        payable\n        returns (bool)\n    {\n        return\n            IProvider(0x602C71e4DAC47a042Ee7f46E0aee17F94A3bA0B6)\n                .checkIfProvider(_AddressOfUser);\n    }\n\n    /// @dev MODIFIERS for provider functions\n    modifier onlyProvider() {\n        require(\n            checkIfProvider(AddressOfUser) == true,\n            \"You must be a provider to access this function\"\n        );\n        _;\n    }\n\n    /// @dev Check if patient exists in DB\n    /// @param _PatientWalletAddress Address of the Patient Wallet\n    function checkPatient(address _PatientWalletAddress)\n        public\n        payable\n        onlyProvider\n        returns (bool)\n    {\n        PatientsData memory _patient_data = Patients[_PatientWalletAddress][0];\n        if (_patient_data.id == 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /// @dev Generate key for patient\n    /// @param _PatientAddress Address of the Patient\n    /// @param _PatientKeyGenerated Generated key of the patient\n    function addPatientToDatabase(\n        address _PatientAddress,\n        string memory _PatientKeyGenerated\n    ) public payable onlyProvider {\n        uint256 keysCount = KeysGenerated[_PatientAddress];\n        PatientsData storage p = Patients[_PatientAddress][keysCount];\n        p.id = keysCount;\n        p.PatientKey.Key = _PatientKeyGenerated;\n        p.PatientKey.Valid = true;\n        p.ValidPatient = true;\n        KeysGenerated[_PatientAddress]++;\n        emit PatientAdded(_PatientAddress, _PatientKeyGenerated);\n    }\n\n    /// @dev To approve third party to access the key\n    /// @param _approveTo Address of the third party\n    function approveUserForKeyAccess(address _approveTo) public payable {\n        uint256 totalApproveUsers = TotalApprovedUsers[msg.sender];\n        address u = ApprovedUsers[msg.sender][totalApproveUsers];\n        u = _approveTo;\n        emit UserApproved(_approveTo, msg.sender);\n    }\n\n    /// @dev To get the patient key\n    /// @param _patientAddress Address of the patient\n    function getPatientKey(address _patientAddress)\n        public\n        view\n        returns (PatientsData memory data)\n    {\n        require(\n            _approvalGranted(_patientAddress),\n            \"You don't have approval for patient data\"\n        );\n\n        return Patients[_patientAddress][0];\n    }\n\n    /// @dev To check if party approved to access address or not\n    /// @param _patientAddress Address of the patient\n    function _approvalGranted(address _patientAddress)\n        private\n        view\n        returns (bool)\n    {\n        uint256 totalApproveByPatient = TotalApprovedUsers[_patientAddress];\n        for (uint256 i = 0; i < totalApproveByPatient; i++) {\n            if (ApprovedUsers[_patientAddress][i] == msg.sender) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /// @dev To get the self keys\n    function getSelfKeys() public view returns (PatientsData memory data) {\n        return Patients[msg.sender][0];\n    }\n}\n",
  "sourceMap": "358:4394:0:-:0;;;468:57;;;;;;;;;-1:-1:-1;492:13:0;:26;;-1:-1:-1;;;;;;492:26:0;508:10;492:26;;;358:4394;;;;;;",
  "sourcePath": "contracts/main.sol",
  "type": "contract"
}